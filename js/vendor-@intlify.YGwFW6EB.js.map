{"version":3,"file":"vendor-@intlify.YGwFW6EB.js","sources":["../../node_modules/.pnpm/@intlify+shared@9.14.0/node_modules/@intlify/shared/dist/shared.mjs","../../node_modules/.pnpm/@intlify+message-compiler@9.14.0/node_modules/@intlify/message-compiler/dist/message-compiler.esm-browser.js","../../node_modules/.pnpm/@intlify+core-base@9.14.0/node_modules/@intlify/core-base/dist/core-base.mjs"],"sourcesContent":["/*!\n  * shared v9.14.0\n  * (c) 2024 kazuya kawaguchi\n  * Released under the MIT License.\n  */\n/**\n * Original Utilities\n * written by kazuya kawaguchi\n */\nconst inBrowser = typeof window !== 'undefined';\nlet mark;\nlet measure;\nif ((process.env.NODE_ENV !== 'production')) {\n    const perf = inBrowser && window.performance;\n    if (perf &&\n        perf.mark &&\n        perf.measure &&\n        perf.clearMarks &&\n        // @ts-ignore browser compat\n        perf.clearMeasures) {\n        mark = (tag) => {\n            perf.mark(tag);\n        };\n        measure = (name, startTag, endTag) => {\n            perf.measure(name, startTag, endTag);\n            perf.clearMarks(startTag);\n            perf.clearMarks(endTag);\n        };\n    }\n}\nconst RE_ARGS = /\\{([0-9a-zA-Z]+)\\}/g;\n/* eslint-disable */\nfunction format(message, ...args) {\n    if (args.length === 1 && isObject(args[0])) {\n        args = args[0];\n    }\n    if (!args || !args.hasOwnProperty) {\n        args = {};\n    }\n    return message.replace(RE_ARGS, (match, identifier) => {\n        return args.hasOwnProperty(identifier) ? args[identifier] : '';\n    });\n}\nconst makeSymbol = (name, shareable = false) => !shareable ? Symbol(name) : Symbol.for(name);\nconst generateFormatCacheKey = (locale, key, source) => friendlyJSONstringify({ l: locale, k: key, s: source });\nconst friendlyJSONstringify = (json) => JSON.stringify(json)\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n    .replace(/\\u0027/g, '\\\\u0027');\nconst isNumber = (val) => typeof val === 'number' && isFinite(val);\nconst isDate = (val) => toTypeString(val) === '[object Date]';\nconst isRegExp = (val) => toTypeString(val) === '[object RegExp]';\nconst isEmptyObject = (val) => isPlainObject(val) && Object.keys(val).length === 0;\nconst assign = Object.assign;\nlet _globalThis;\nconst getGlobalThis = () => {\n    // prettier-ignore\n    return (_globalThis ||\n        (_globalThis =\n            typeof globalThis !== 'undefined'\n                ? globalThis\n                : typeof self !== 'undefined'\n                    ? self\n                    : typeof window !== 'undefined'\n                        ? window\n                        : typeof global !== 'undefined'\n                            ? global\n                            : {}));\n};\nfunction escapeHtml(rawText) {\n    return rawText\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&apos;');\n}\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn(obj, key) {\n    return hasOwnProperty.call(obj, key);\n}\n/* eslint-enable */\n/**\n * Useful Utilities By Evan you\n * Modified by kazuya kawaguchi\n * MIT License\n * https://github.com/vuejs/vue-next/blob/master/packages/shared/src/index.ts\n * https://github.com/vuejs/vue-next/blob/master/packages/shared/src/codeframe.ts\n */\nconst isArray = Array.isArray;\nconst isFunction = (val) => typeof val === 'function';\nconst isString = (val) => typeof val === 'string';\nconst isBoolean = (val) => typeof val === 'boolean';\nconst isSymbol = (val) => typeof val === 'symbol';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isObject = (val) => val !== null && typeof val === 'object';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isPromise = (val) => {\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\n};\nconst objectToString = Object.prototype.toString;\nconst toTypeString = (value) => objectToString.call(value);\nconst isPlainObject = (val) => {\n    if (!isObject(val))\n        return false;\n    const proto = Object.getPrototypeOf(val);\n    return proto === null || proto.constructor === Object;\n};\n// for converting list and named values to displayed strings.\nconst toDisplayString = (val) => {\n    return val == null\n        ? ''\n        : isArray(val) || (isPlainObject(val) && val.toString === objectToString)\n            ? JSON.stringify(val, null, 2)\n            : String(val);\n};\nfunction join(items, separator = '') {\n    return items.reduce((str, item, index) => (index === 0 ? str + item : str + separator + item), '');\n}\nconst RANGE = 2;\nfunction generateCodeFrame(source, start = 0, end = source.length) {\n    const lines = source.split(/\\r?\\n/);\n    let count = 0;\n    const res = [];\n    for (let i = 0; i < lines.length; i++) {\n        count += lines[i].length + 1;\n        if (count >= start) {\n            for (let j = i - RANGE; j <= i + RANGE || end > count; j++) {\n                if (j < 0 || j >= lines.length)\n                    continue;\n                const line = j + 1;\n                res.push(`${line}${' '.repeat(3 - String(line).length)}|  ${lines[j]}`);\n                const lineLength = lines[j].length;\n                if (j === i) {\n                    // push underline\n                    const pad = start - (count - lineLength) + 1;\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\n                }\n                else if (j > i) {\n                    if (end > count) {\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\n                        res.push(`   |  ` + '^'.repeat(length));\n                    }\n                    count += lineLength + 1;\n                }\n            }\n            break;\n        }\n    }\n    return res.join('\\n');\n}\nfunction incrementer(code) {\n    let current = code;\n    return () => ++current;\n}\n\nfunction warn(msg, err) {\n    if (typeof console !== 'undefined') {\n        console.warn(`[intlify] ` + msg);\n        /* istanbul ignore if */\n        if (err) {\n            console.warn(err.stack);\n        }\n    }\n}\nconst hasWarned = {};\nfunction warnOnce(msg) {\n    if (!hasWarned[msg]) {\n        hasWarned[msg] = true;\n        warn(msg);\n    }\n}\n\n/**\n * Event emitter, forked from the below:\n * - original repository url: https://github.com/developit/mitt\n * - code url: https://github.com/developit/mitt/blob/master/src/index.ts\n * - author: Jason Miller (https://github.com/developit)\n * - license: MIT\n */\n/**\n * Create a event emitter\n *\n * @returns An event emitter\n */\nfunction createEmitter() {\n    const events = new Map();\n    const emitter = {\n        events,\n        on(event, handler) {\n            const handlers = events.get(event);\n            const added = handlers && handlers.push(handler);\n            if (!added) {\n                events.set(event, [handler]);\n            }\n        },\n        off(event, handler) {\n            const handlers = events.get(event);\n            if (handlers) {\n                handlers.splice(handlers.indexOf(handler) >>> 0, 1);\n            }\n        },\n        emit(event, payload) {\n            (events.get(event) || [])\n                .slice()\n                .map(handler => handler(payload));\n            (events.get('*') || [])\n                .slice()\n                .map(handler => handler(event, payload));\n        }\n    };\n    return emitter;\n}\n\nconst isNotObjectOrIsArray = (val) => !isObject(val) || isArray(val);\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nfunction deepCopy(src, des) {\n    // src and des should both be objects, and none of them can be a array\n    if (isNotObjectOrIsArray(src) || isNotObjectOrIsArray(des)) {\n        throw new Error('Invalid value');\n    }\n    const stack = [{ src, des }];\n    while (stack.length) {\n        const { src, des } = stack.pop();\n        Object.keys(src).forEach(key => {\n            if (isNotObjectOrIsArray(src[key]) || isNotObjectOrIsArray(des[key])) {\n                // replace with src[key] when:\n                // src[key] or des[key] is not an object, or\n                // src[key] or des[key] is an array\n                des[key] = src[key];\n            }\n            else {\n                // src[key] and des[key] are both objects, merge them\n                stack.push({ src: src[key], des: des[key] });\n            }\n        });\n    }\n}\n\nexport { assign, createEmitter, deepCopy, escapeHtml, format, friendlyJSONstringify, generateCodeFrame, generateFormatCacheKey, getGlobalThis, hasOwn, inBrowser, incrementer, isArray, isBoolean, isDate, isEmptyObject, isFunction, isNumber, isObject, isPlainObject, isPromise, isRegExp, isString, isSymbol, join, makeSymbol, mark, measure, objectToString, toDisplayString, toTypeString, warn, warnOnce };\n","/*!\n  * message-compiler v9.14.0\n  * (c) 2024 kazuya kawaguchi\n  * Released under the MIT License.\n  */\nconst LOCATION_STUB = {\n    start: { line: 1, column: 1, offset: 0 },\n    end: { line: 1, column: 1, offset: 0 }\n};\nfunction createPosition(line, column, offset) {\n    return { line, column, offset };\n}\nfunction createLocation(start, end, source) {\n    const loc = { start, end };\n    if (source != null) {\n        loc.source = source;\n    }\n    return loc;\n}\n\n/**\n * Original Utilities\n * written by kazuya kawaguchi\n */\nconst RE_ARGS = /\\{([0-9a-zA-Z]+)\\}/g;\n/* eslint-disable */\nfunction format(message, ...args) {\n    if (args.length === 1 && isObject(args[0])) {\n        args = args[0];\n    }\n    if (!args || !args.hasOwnProperty) {\n        args = {};\n    }\n    return message.replace(RE_ARGS, (match, identifier) => {\n        return args.hasOwnProperty(identifier) ? args[identifier] : '';\n    });\n}\nconst assign = Object.assign;\nconst isString = (val) => typeof val === 'string';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isObject = (val) => val !== null && typeof val === 'object';\nfunction join(items, separator = '') {\n    return items.reduce((str, item, index) => (index === 0 ? str + item : str + separator + item), '');\n}\n\nconst CompileWarnCodes = {\n    USE_MODULO_SYNTAX: 1,\n    __EXTEND_POINT__: 2\n};\n/** @internal */\nconst warnMessages = {\n    [CompileWarnCodes.USE_MODULO_SYNTAX]: `Use modulo before '{{0}}'.`\n};\nfunction createCompileWarn(code, loc, ...args) {\n    const msg = format(warnMessages[code] || '', ...(args || [])) ;\n    const message = { message: String(msg), code };\n    if (loc) {\n        message.location = loc;\n    }\n    return message;\n}\n\nconst CompileErrorCodes = {\n    // tokenizer error codes\n    EXPECTED_TOKEN: 1,\n    INVALID_TOKEN_IN_PLACEHOLDER: 2,\n    UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER: 3,\n    UNKNOWN_ESCAPE_SEQUENCE: 4,\n    INVALID_UNICODE_ESCAPE_SEQUENCE: 5,\n    UNBALANCED_CLOSING_BRACE: 6,\n    UNTERMINATED_CLOSING_BRACE: 7,\n    EMPTY_PLACEHOLDER: 8,\n    NOT_ALLOW_NEST_PLACEHOLDER: 9,\n    INVALID_LINKED_FORMAT: 10,\n    // parser error codes\n    MUST_HAVE_MESSAGES_IN_PLURAL: 11,\n    UNEXPECTED_EMPTY_LINKED_MODIFIER: 12,\n    UNEXPECTED_EMPTY_LINKED_KEY: 13,\n    UNEXPECTED_LEXICAL_ANALYSIS: 14,\n    // generator error codes\n    UNHANDLED_CODEGEN_NODE_TYPE: 15,\n    // minifier error codes\n    UNHANDLED_MINIFIER_NODE_TYPE: 16,\n    // Special value for higher-order compilers to pick up the last code\n    // to avoid collision of error codes. This should always be kept as the last\n    // item.\n    __EXTEND_POINT__: 17\n};\n/** @internal */\nconst errorMessages = {\n    // tokenizer error messages\n    [CompileErrorCodes.EXPECTED_TOKEN]: `Expected token: '{0}'`,\n    [CompileErrorCodes.INVALID_TOKEN_IN_PLACEHOLDER]: `Invalid token in placeholder: '{0}'`,\n    [CompileErrorCodes.UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER]: `Unterminated single quote in placeholder`,\n    [CompileErrorCodes.UNKNOWN_ESCAPE_SEQUENCE]: `Unknown escape sequence: \\\\{0}`,\n    [CompileErrorCodes.INVALID_UNICODE_ESCAPE_SEQUENCE]: `Invalid unicode escape sequence: {0}`,\n    [CompileErrorCodes.UNBALANCED_CLOSING_BRACE]: `Unbalanced closing brace`,\n    [CompileErrorCodes.UNTERMINATED_CLOSING_BRACE]: `Unterminated closing brace`,\n    [CompileErrorCodes.EMPTY_PLACEHOLDER]: `Empty placeholder`,\n    [CompileErrorCodes.NOT_ALLOW_NEST_PLACEHOLDER]: `Not allowed nest placeholder`,\n    [CompileErrorCodes.INVALID_LINKED_FORMAT]: `Invalid linked format`,\n    // parser error messages\n    [CompileErrorCodes.MUST_HAVE_MESSAGES_IN_PLURAL]: `Plural must have messages`,\n    [CompileErrorCodes.UNEXPECTED_EMPTY_LINKED_MODIFIER]: `Unexpected empty linked modifier`,\n    [CompileErrorCodes.UNEXPECTED_EMPTY_LINKED_KEY]: `Unexpected empty linked key`,\n    [CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS]: `Unexpected lexical analysis in token: '{0}'`,\n    // generator error messages\n    [CompileErrorCodes.UNHANDLED_CODEGEN_NODE_TYPE]: `unhandled codegen node type: '{0}'`,\n    // minimizer error messages\n    [CompileErrorCodes.UNHANDLED_MINIFIER_NODE_TYPE]: `unhandled mimifier node type: '{0}'`\n};\nfunction createCompileError(code, loc, options = {}) {\n    const { domain, messages, args } = options;\n    const msg = format((messages || errorMessages)[code] || '', ...(args || []))\n        ;\n    const error = new SyntaxError(String(msg));\n    error.code = code;\n    if (loc) {\n        error.location = loc;\n    }\n    error.domain = domain;\n    return error;\n}\n/** @internal */\nfunction defaultOnError(error) {\n    throw error;\n}\n\n// eslint-disable-next-line no-useless-escape\nconst RE_HTML_TAG = /<\\/?[\\w\\s=\"/.':;#-\\/]+>/;\nconst detectHtmlTag = (source) => RE_HTML_TAG.test(source);\n\nconst CHAR_SP = ' ';\nconst CHAR_CR = '\\r';\nconst CHAR_LF = '\\n';\nconst CHAR_LS = String.fromCharCode(0x2028);\nconst CHAR_PS = String.fromCharCode(0x2029);\nfunction createScanner(str) {\n    const _buf = str;\n    let _index = 0;\n    let _line = 1;\n    let _column = 1;\n    let _peekOffset = 0;\n    const isCRLF = (index) => _buf[index] === CHAR_CR && _buf[index + 1] === CHAR_LF;\n    const isLF = (index) => _buf[index] === CHAR_LF;\n    const isPS = (index) => _buf[index] === CHAR_PS;\n    const isLS = (index) => _buf[index] === CHAR_LS;\n    const isLineEnd = (index) => isCRLF(index) || isLF(index) || isPS(index) || isLS(index);\n    const index = () => _index;\n    const line = () => _line;\n    const column = () => _column;\n    const peekOffset = () => _peekOffset;\n    const charAt = (offset) => isCRLF(offset) || isPS(offset) || isLS(offset) ? CHAR_LF : _buf[offset];\n    const currentChar = () => charAt(_index);\n    const currentPeek = () => charAt(_index + _peekOffset);\n    function next() {\n        _peekOffset = 0;\n        if (isLineEnd(_index)) {\n            _line++;\n            _column = 0;\n        }\n        if (isCRLF(_index)) {\n            _index++;\n        }\n        _index++;\n        _column++;\n        return _buf[_index];\n    }\n    function peek() {\n        if (isCRLF(_index + _peekOffset)) {\n            _peekOffset++;\n        }\n        _peekOffset++;\n        return _buf[_index + _peekOffset];\n    }\n    function reset() {\n        _index = 0;\n        _line = 1;\n        _column = 1;\n        _peekOffset = 0;\n    }\n    function resetPeek(offset = 0) {\n        _peekOffset = offset;\n    }\n    function skipToPeek() {\n        const target = _index + _peekOffset;\n        // eslint-disable-next-line no-unmodified-loop-condition\n        while (target !== _index) {\n            next();\n        }\n        _peekOffset = 0;\n    }\n    return {\n        index,\n        line,\n        column,\n        peekOffset,\n        charAt,\n        currentChar,\n        currentPeek,\n        next,\n        peek,\n        reset,\n        resetPeek,\n        skipToPeek\n    };\n}\n\nconst EOF = undefined;\nconst DOT = '.';\nconst LITERAL_DELIMITER = \"'\";\nconst ERROR_DOMAIN$3 = 'tokenizer';\nfunction createTokenizer(source, options = {}) {\n    const location = options.location !== false;\n    const _scnr = createScanner(source);\n    const currentOffset = () => _scnr.index();\n    const currentPosition = () => createPosition(_scnr.line(), _scnr.column(), _scnr.index());\n    const _initLoc = currentPosition();\n    const _initOffset = currentOffset();\n    const _context = {\n        currentType: 14 /* TokenTypes.EOF */,\n        offset: _initOffset,\n        startLoc: _initLoc,\n        endLoc: _initLoc,\n        lastType: 14 /* TokenTypes.EOF */,\n        lastOffset: _initOffset,\n        lastStartLoc: _initLoc,\n        lastEndLoc: _initLoc,\n        braceNest: 0,\n        inLinked: false,\n        text: ''\n    };\n    const context = () => _context;\n    const { onError } = options;\n    function emitError(code, pos, offset, ...args) {\n        const ctx = context();\n        pos.column += offset;\n        pos.offset += offset;\n        if (onError) {\n            const loc = location ? createLocation(ctx.startLoc, pos) : null;\n            const err = createCompileError(code, loc, {\n                domain: ERROR_DOMAIN$3,\n                args\n            });\n            onError(err);\n        }\n    }\n    function getToken(context, type, value) {\n        context.endLoc = currentPosition();\n        context.currentType = type;\n        const token = { type };\n        if (location) {\n            token.loc = createLocation(context.startLoc, context.endLoc);\n        }\n        if (value != null) {\n            token.value = value;\n        }\n        return token;\n    }\n    const getEndToken = (context) => getToken(context, 14 /* TokenTypes.EOF */);\n    function eat(scnr, ch) {\n        if (scnr.currentChar() === ch) {\n            scnr.next();\n            return ch;\n        }\n        else {\n            emitError(CompileErrorCodes.EXPECTED_TOKEN, currentPosition(), 0, ch);\n            return '';\n        }\n    }\n    function peekSpaces(scnr) {\n        let buf = '';\n        while (scnr.currentPeek() === CHAR_SP || scnr.currentPeek() === CHAR_LF) {\n            buf += scnr.currentPeek();\n            scnr.peek();\n        }\n        return buf;\n    }\n    function skipSpaces(scnr) {\n        const buf = peekSpaces(scnr);\n        scnr.skipToPeek();\n        return buf;\n    }\n    function isIdentifierStart(ch) {\n        if (ch === EOF) {\n            return false;\n        }\n        const cc = ch.charCodeAt(0);\n        return ((cc >= 97 && cc <= 122) || // a-z\n            (cc >= 65 && cc <= 90) || // A-Z\n            cc === 95 // _\n        );\n    }\n    function isNumberStart(ch) {\n        if (ch === EOF) {\n            return false;\n        }\n        const cc = ch.charCodeAt(0);\n        return cc >= 48 && cc <= 57; // 0-9\n    }\n    function isNamedIdentifierStart(scnr, context) {\n        const { currentType } = context;\n        if (currentType !== 2 /* TokenTypes.BraceLeft */) {\n            return false;\n        }\n        peekSpaces(scnr);\n        const ret = isIdentifierStart(scnr.currentPeek());\n        scnr.resetPeek();\n        return ret;\n    }\n    function isListIdentifierStart(scnr, context) {\n        const { currentType } = context;\n        if (currentType !== 2 /* TokenTypes.BraceLeft */) {\n            return false;\n        }\n        peekSpaces(scnr);\n        const ch = scnr.currentPeek() === '-' ? scnr.peek() : scnr.currentPeek();\n        const ret = isNumberStart(ch);\n        scnr.resetPeek();\n        return ret;\n    }\n    function isLiteralStart(scnr, context) {\n        const { currentType } = context;\n        if (currentType !== 2 /* TokenTypes.BraceLeft */) {\n            return false;\n        }\n        peekSpaces(scnr);\n        const ret = scnr.currentPeek() === LITERAL_DELIMITER;\n        scnr.resetPeek();\n        return ret;\n    }\n    function isLinkedDotStart(scnr, context) {\n        const { currentType } = context;\n        if (currentType !== 8 /* TokenTypes.LinkedAlias */) {\n            return false;\n        }\n        peekSpaces(scnr);\n        const ret = scnr.currentPeek() === \".\" /* TokenChars.LinkedDot */;\n        scnr.resetPeek();\n        return ret;\n    }\n    function isLinkedModifierStart(scnr, context) {\n        const { currentType } = context;\n        if (currentType !== 9 /* TokenTypes.LinkedDot */) {\n            return false;\n        }\n        peekSpaces(scnr);\n        const ret = isIdentifierStart(scnr.currentPeek());\n        scnr.resetPeek();\n        return ret;\n    }\n    function isLinkedDelimiterStart(scnr, context) {\n        const { currentType } = context;\n        if (!(currentType === 8 /* TokenTypes.LinkedAlias */ ||\n            currentType === 12 /* TokenTypes.LinkedModifier */)) {\n            return false;\n        }\n        peekSpaces(scnr);\n        const ret = scnr.currentPeek() === \":\" /* TokenChars.LinkedDelimiter */;\n        scnr.resetPeek();\n        return ret;\n    }\n    function isLinkedReferStart(scnr, context) {\n        const { currentType } = context;\n        if (currentType !== 10 /* TokenTypes.LinkedDelimiter */) {\n            return false;\n        }\n        const fn = () => {\n            const ch = scnr.currentPeek();\n            if (ch === \"{\" /* TokenChars.BraceLeft */) {\n                return isIdentifierStart(scnr.peek());\n            }\n            else if (ch === \"@\" /* TokenChars.LinkedAlias */ ||\n                ch === \"%\" /* TokenChars.Modulo */ ||\n                ch === \"|\" /* TokenChars.Pipe */ ||\n                ch === \":\" /* TokenChars.LinkedDelimiter */ ||\n                ch === \".\" /* TokenChars.LinkedDot */ ||\n                ch === CHAR_SP ||\n                !ch) {\n                return false;\n            }\n            else if (ch === CHAR_LF) {\n                scnr.peek();\n                return fn();\n            }\n            else {\n                // other characters\n                return isTextStart(scnr, false);\n            }\n        };\n        const ret = fn();\n        scnr.resetPeek();\n        return ret;\n    }\n    function isPluralStart(scnr) {\n        peekSpaces(scnr);\n        const ret = scnr.currentPeek() === \"|\" /* TokenChars.Pipe */;\n        scnr.resetPeek();\n        return ret;\n    }\n    function detectModuloStart(scnr) {\n        const spaces = peekSpaces(scnr);\n        const ret = scnr.currentPeek() === \"%\" /* TokenChars.Modulo */ &&\n            scnr.peek() === \"{\" /* TokenChars.BraceLeft */;\n        scnr.resetPeek();\n        return {\n            isModulo: ret,\n            hasSpace: spaces.length > 0\n        };\n    }\n    function isTextStart(scnr, reset = true) {\n        const fn = (hasSpace = false, prev = '', detectModulo = false) => {\n            const ch = scnr.currentPeek();\n            if (ch === \"{\" /* TokenChars.BraceLeft */) {\n                return prev === \"%\" /* TokenChars.Modulo */ ? false : hasSpace;\n            }\n            else if (ch === \"@\" /* TokenChars.LinkedAlias */ || !ch) {\n                return prev === \"%\" /* TokenChars.Modulo */ ? true : hasSpace;\n            }\n            else if (ch === \"%\" /* TokenChars.Modulo */) {\n                scnr.peek();\n                return fn(hasSpace, \"%\" /* TokenChars.Modulo */, true);\n            }\n            else if (ch === \"|\" /* TokenChars.Pipe */) {\n                return prev === \"%\" /* TokenChars.Modulo */ || detectModulo\n                    ? true\n                    : !(prev === CHAR_SP || prev === CHAR_LF);\n            }\n            else if (ch === CHAR_SP) {\n                scnr.peek();\n                return fn(true, CHAR_SP, detectModulo);\n            }\n            else if (ch === CHAR_LF) {\n                scnr.peek();\n                return fn(true, CHAR_LF, detectModulo);\n            }\n            else {\n                return true;\n            }\n        };\n        const ret = fn();\n        reset && scnr.resetPeek();\n        return ret;\n    }\n    function takeChar(scnr, fn) {\n        const ch = scnr.currentChar();\n        if (ch === EOF) {\n            return EOF;\n        }\n        if (fn(ch)) {\n            scnr.next();\n            return ch;\n        }\n        return null;\n    }\n    function isIdentifier(ch) {\n        const cc = ch.charCodeAt(0);\n        return ((cc >= 97 && cc <= 122) || // a-z\n            (cc >= 65 && cc <= 90) || // A-Z\n            (cc >= 48 && cc <= 57) || // 0-9\n            cc === 95 || // _\n            cc === 36 // $\n        );\n    }\n    function takeIdentifierChar(scnr) {\n        return takeChar(scnr, isIdentifier);\n    }\n    function isNamedIdentifier(ch) {\n        const cc = ch.charCodeAt(0);\n        return ((cc >= 97 && cc <= 122) || // a-z\n            (cc >= 65 && cc <= 90) || // A-Z\n            (cc >= 48 && cc <= 57) || // 0-9\n            cc === 95 || // _\n            cc === 36 || // $\n            cc === 45 // -\n        );\n    }\n    function takeNamedIdentifierChar(scnr) {\n        return takeChar(scnr, isNamedIdentifier);\n    }\n    function isDigit(ch) {\n        const cc = ch.charCodeAt(0);\n        return cc >= 48 && cc <= 57; // 0-9\n    }\n    function takeDigit(scnr) {\n        return takeChar(scnr, isDigit);\n    }\n    function isHexDigit(ch) {\n        const cc = ch.charCodeAt(0);\n        return ((cc >= 48 && cc <= 57) || // 0-9\n            (cc >= 65 && cc <= 70) || // A-F\n            (cc >= 97 && cc <= 102)); // a-f\n    }\n    function takeHexDigit(scnr) {\n        return takeChar(scnr, isHexDigit);\n    }\n    function getDigits(scnr) {\n        let ch = '';\n        let num = '';\n        while ((ch = takeDigit(scnr))) {\n            num += ch;\n        }\n        return num;\n    }\n    function readModulo(scnr) {\n        skipSpaces(scnr);\n        const ch = scnr.currentChar();\n        if (ch !== \"%\" /* TokenChars.Modulo */) {\n            emitError(CompileErrorCodes.EXPECTED_TOKEN, currentPosition(), 0, ch);\n        }\n        scnr.next();\n        return \"%\" /* TokenChars.Modulo */;\n    }\n    function readText(scnr) {\n        let buf = '';\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            const ch = scnr.currentChar();\n            if (ch === \"{\" /* TokenChars.BraceLeft */ ||\n                ch === \"}\" /* TokenChars.BraceRight */ ||\n                ch === \"@\" /* TokenChars.LinkedAlias */ ||\n                ch === \"|\" /* TokenChars.Pipe */ ||\n                !ch) {\n                break;\n            }\n            else if (ch === \"%\" /* TokenChars.Modulo */) {\n                if (isTextStart(scnr)) {\n                    buf += ch;\n                    scnr.next();\n                }\n                else {\n                    break;\n                }\n            }\n            else if (ch === CHAR_SP || ch === CHAR_LF) {\n                if (isTextStart(scnr)) {\n                    buf += ch;\n                    scnr.next();\n                }\n                else if (isPluralStart(scnr)) {\n                    break;\n                }\n                else {\n                    buf += ch;\n                    scnr.next();\n                }\n            }\n            else {\n                buf += ch;\n                scnr.next();\n            }\n        }\n        return buf;\n    }\n    function readNamedIdentifier(scnr) {\n        skipSpaces(scnr);\n        let ch = '';\n        let name = '';\n        while ((ch = takeNamedIdentifierChar(scnr))) {\n            name += ch;\n        }\n        if (scnr.currentChar() === EOF) {\n            emitError(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, currentPosition(), 0);\n        }\n        return name;\n    }\n    function readListIdentifier(scnr) {\n        skipSpaces(scnr);\n        let value = '';\n        if (scnr.currentChar() === '-') {\n            scnr.next();\n            value += `-${getDigits(scnr)}`;\n        }\n        else {\n            value += getDigits(scnr);\n        }\n        if (scnr.currentChar() === EOF) {\n            emitError(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, currentPosition(), 0);\n        }\n        return value;\n    }\n    function isLiteral(ch) {\n        return ch !== LITERAL_DELIMITER && ch !== CHAR_LF;\n    }\n    function readLiteral(scnr) {\n        skipSpaces(scnr);\n        // eslint-disable-next-line no-useless-escape\n        eat(scnr, `\\'`);\n        let ch = '';\n        let literal = '';\n        while ((ch = takeChar(scnr, isLiteral))) {\n            if (ch === '\\\\') {\n                literal += readEscapeSequence(scnr);\n            }\n            else {\n                literal += ch;\n            }\n        }\n        const current = scnr.currentChar();\n        if (current === CHAR_LF || current === EOF) {\n            emitError(CompileErrorCodes.UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER, currentPosition(), 0);\n            // TODO: Is it correct really?\n            if (current === CHAR_LF) {\n                scnr.next();\n                // eslint-disable-next-line no-useless-escape\n                eat(scnr, `\\'`);\n            }\n            return literal;\n        }\n        // eslint-disable-next-line no-useless-escape\n        eat(scnr, `\\'`);\n        return literal;\n    }\n    function readEscapeSequence(scnr) {\n        const ch = scnr.currentChar();\n        switch (ch) {\n            case '\\\\':\n            case `\\'`: // eslint-disable-line no-useless-escape\n                scnr.next();\n                return `\\\\${ch}`;\n            case 'u':\n                return readUnicodeEscapeSequence(scnr, ch, 4);\n            case 'U':\n                return readUnicodeEscapeSequence(scnr, ch, 6);\n            default:\n                emitError(CompileErrorCodes.UNKNOWN_ESCAPE_SEQUENCE, currentPosition(), 0, ch);\n                return '';\n        }\n    }\n    function readUnicodeEscapeSequence(scnr, unicode, digits) {\n        eat(scnr, unicode);\n        let sequence = '';\n        for (let i = 0; i < digits; i++) {\n            const ch = takeHexDigit(scnr);\n            if (!ch) {\n                emitError(CompileErrorCodes.INVALID_UNICODE_ESCAPE_SEQUENCE, currentPosition(), 0, `\\\\${unicode}${sequence}${scnr.currentChar()}`);\n                break;\n            }\n            sequence += ch;\n        }\n        return `\\\\${unicode}${sequence}`;\n    }\n    function isInvalidIdentifier(ch) {\n        return (ch !== \"{\" /* TokenChars.BraceLeft */ &&\n            ch !== \"}\" /* TokenChars.BraceRight */ &&\n            ch !== CHAR_SP &&\n            ch !== CHAR_LF);\n    }\n    function readInvalidIdentifier(scnr) {\n        skipSpaces(scnr);\n        let ch = '';\n        let identifiers = '';\n        while ((ch = takeChar(scnr, isInvalidIdentifier))) {\n            identifiers += ch;\n        }\n        return identifiers;\n    }\n    function readLinkedModifier(scnr) {\n        let ch = '';\n        let name = '';\n        while ((ch = takeIdentifierChar(scnr))) {\n            name += ch;\n        }\n        return name;\n    }\n    function readLinkedRefer(scnr) {\n        const fn = (buf) => {\n            const ch = scnr.currentChar();\n            if (ch === \"{\" /* TokenChars.BraceLeft */ ||\n                ch === \"%\" /* TokenChars.Modulo */ ||\n                ch === \"@\" /* TokenChars.LinkedAlias */ ||\n                ch === \"|\" /* TokenChars.Pipe */ ||\n                ch === \"(\" /* TokenChars.ParenLeft */ ||\n                ch === \")\" /* TokenChars.ParenRight */ ||\n                !ch) {\n                return buf;\n            }\n            else if (ch === CHAR_SP) {\n                return buf;\n            }\n            else if (ch === CHAR_LF || ch === DOT) {\n                buf += ch;\n                scnr.next();\n                return fn(buf);\n            }\n            else {\n                buf += ch;\n                scnr.next();\n                return fn(buf);\n            }\n        };\n        return fn('');\n    }\n    function readPlural(scnr) {\n        skipSpaces(scnr);\n        const plural = eat(scnr, \"|\" /* TokenChars.Pipe */);\n        skipSpaces(scnr);\n        return plural;\n    }\n    // TODO: We need refactoring of token parsing ...\n    function readTokenInPlaceholder(scnr, context) {\n        let token = null;\n        const ch = scnr.currentChar();\n        switch (ch) {\n            case \"{\" /* TokenChars.BraceLeft */:\n                if (context.braceNest >= 1) {\n                    emitError(CompileErrorCodes.NOT_ALLOW_NEST_PLACEHOLDER, currentPosition(), 0);\n                }\n                scnr.next();\n                token = getToken(context, 2 /* TokenTypes.BraceLeft */, \"{\" /* TokenChars.BraceLeft */);\n                skipSpaces(scnr);\n                context.braceNest++;\n                return token;\n            case \"}\" /* TokenChars.BraceRight */:\n                if (context.braceNest > 0 &&\n                    context.currentType === 2 /* TokenTypes.BraceLeft */) {\n                    emitError(CompileErrorCodes.EMPTY_PLACEHOLDER, currentPosition(), 0);\n                }\n                scnr.next();\n                token = getToken(context, 3 /* TokenTypes.BraceRight */, \"}\" /* TokenChars.BraceRight */);\n                context.braceNest--;\n                context.braceNest > 0 && skipSpaces(scnr);\n                if (context.inLinked && context.braceNest === 0) {\n                    context.inLinked = false;\n                }\n                return token;\n            case \"@\" /* TokenChars.LinkedAlias */:\n                if (context.braceNest > 0) {\n                    emitError(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, currentPosition(), 0);\n                }\n                token = readTokenInLinked(scnr, context) || getEndToken(context);\n                context.braceNest = 0;\n                return token;\n            default: {\n                let validNamedIdentifier = true;\n                let validListIdentifier = true;\n                let validLiteral = true;\n                if (isPluralStart(scnr)) {\n                    if (context.braceNest > 0) {\n                        emitError(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, currentPosition(), 0);\n                    }\n                    token = getToken(context, 1 /* TokenTypes.Pipe */, readPlural(scnr));\n                    // reset\n                    context.braceNest = 0;\n                    context.inLinked = false;\n                    return token;\n                }\n                if (context.braceNest > 0 &&\n                    (context.currentType === 5 /* TokenTypes.Named */ ||\n                        context.currentType === 6 /* TokenTypes.List */ ||\n                        context.currentType === 7 /* TokenTypes.Literal */)) {\n                    emitError(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, currentPosition(), 0);\n                    context.braceNest = 0;\n                    return readToken(scnr, context);\n                }\n                if ((validNamedIdentifier = isNamedIdentifierStart(scnr, context))) {\n                    token = getToken(context, 5 /* TokenTypes.Named */, readNamedIdentifier(scnr));\n                    skipSpaces(scnr);\n                    return token;\n                }\n                if ((validListIdentifier = isListIdentifierStart(scnr, context))) {\n                    token = getToken(context, 6 /* TokenTypes.List */, readListIdentifier(scnr));\n                    skipSpaces(scnr);\n                    return token;\n                }\n                if ((validLiteral = isLiteralStart(scnr, context))) {\n                    token = getToken(context, 7 /* TokenTypes.Literal */, readLiteral(scnr));\n                    skipSpaces(scnr);\n                    return token;\n                }\n                if (!validNamedIdentifier && !validListIdentifier && !validLiteral) {\n                    // TODO: we should be re-designed invalid cases, when we will extend message syntax near the future ...\n                    token = getToken(context, 13 /* TokenTypes.InvalidPlace */, readInvalidIdentifier(scnr));\n                    emitError(CompileErrorCodes.INVALID_TOKEN_IN_PLACEHOLDER, currentPosition(), 0, token.value);\n                    skipSpaces(scnr);\n                    return token;\n                }\n                break;\n            }\n        }\n        return token;\n    }\n    // TODO: We need refactoring of token parsing ...\n    function readTokenInLinked(scnr, context) {\n        const { currentType } = context;\n        let token = null;\n        const ch = scnr.currentChar();\n        if ((currentType === 8 /* TokenTypes.LinkedAlias */ ||\n            currentType === 9 /* TokenTypes.LinkedDot */ ||\n            currentType === 12 /* TokenTypes.LinkedModifier */ ||\n            currentType === 10 /* TokenTypes.LinkedDelimiter */) &&\n            (ch === CHAR_LF || ch === CHAR_SP)) {\n            emitError(CompileErrorCodes.INVALID_LINKED_FORMAT, currentPosition(), 0);\n        }\n        switch (ch) {\n            case \"@\" /* TokenChars.LinkedAlias */:\n                scnr.next();\n                token = getToken(context, 8 /* TokenTypes.LinkedAlias */, \"@\" /* TokenChars.LinkedAlias */);\n                context.inLinked = true;\n                return token;\n            case \".\" /* TokenChars.LinkedDot */:\n                skipSpaces(scnr);\n                scnr.next();\n                return getToken(context, 9 /* TokenTypes.LinkedDot */, \".\" /* TokenChars.LinkedDot */);\n            case \":\" /* TokenChars.LinkedDelimiter */:\n                skipSpaces(scnr);\n                scnr.next();\n                return getToken(context, 10 /* TokenTypes.LinkedDelimiter */, \":\" /* TokenChars.LinkedDelimiter */);\n            default:\n                if (isPluralStart(scnr)) {\n                    token = getToken(context, 1 /* TokenTypes.Pipe */, readPlural(scnr));\n                    // reset\n                    context.braceNest = 0;\n                    context.inLinked = false;\n                    return token;\n                }\n                if (isLinkedDotStart(scnr, context) ||\n                    isLinkedDelimiterStart(scnr, context)) {\n                    skipSpaces(scnr);\n                    return readTokenInLinked(scnr, context);\n                }\n                if (isLinkedModifierStart(scnr, context)) {\n                    skipSpaces(scnr);\n                    return getToken(context, 12 /* TokenTypes.LinkedModifier */, readLinkedModifier(scnr));\n                }\n                if (isLinkedReferStart(scnr, context)) {\n                    skipSpaces(scnr);\n                    if (ch === \"{\" /* TokenChars.BraceLeft */) {\n                        // scan the placeholder\n                        return readTokenInPlaceholder(scnr, context) || token;\n                    }\n                    else {\n                        return getToken(context, 11 /* TokenTypes.LinkedKey */, readLinkedRefer(scnr));\n                    }\n                }\n                if (currentType === 8 /* TokenTypes.LinkedAlias */) {\n                    emitError(CompileErrorCodes.INVALID_LINKED_FORMAT, currentPosition(), 0);\n                }\n                context.braceNest = 0;\n                context.inLinked = false;\n                return readToken(scnr, context);\n        }\n    }\n    // TODO: We need refactoring of token parsing ...\n    function readToken(scnr, context) {\n        let token = { type: 14 /* TokenTypes.EOF */ };\n        if (context.braceNest > 0) {\n            return readTokenInPlaceholder(scnr, context) || getEndToken(context);\n        }\n        if (context.inLinked) {\n            return readTokenInLinked(scnr, context) || getEndToken(context);\n        }\n        const ch = scnr.currentChar();\n        switch (ch) {\n            case \"{\" /* TokenChars.BraceLeft */:\n                return readTokenInPlaceholder(scnr, context) || getEndToken(context);\n            case \"}\" /* TokenChars.BraceRight */:\n                emitError(CompileErrorCodes.UNBALANCED_CLOSING_BRACE, currentPosition(), 0);\n                scnr.next();\n                return getToken(context, 3 /* TokenTypes.BraceRight */, \"}\" /* TokenChars.BraceRight */);\n            case \"@\" /* TokenChars.LinkedAlias */:\n                return readTokenInLinked(scnr, context) || getEndToken(context);\n            default: {\n                if (isPluralStart(scnr)) {\n                    token = getToken(context, 1 /* TokenTypes.Pipe */, readPlural(scnr));\n                    // reset\n                    context.braceNest = 0;\n                    context.inLinked = false;\n                    return token;\n                }\n                const { isModulo, hasSpace } = detectModuloStart(scnr);\n                if (isModulo) {\n                    return hasSpace\n                        ? getToken(context, 0 /* TokenTypes.Text */, readText(scnr))\n                        : getToken(context, 4 /* TokenTypes.Modulo */, readModulo(scnr));\n                }\n                if (isTextStart(scnr)) {\n                    return getToken(context, 0 /* TokenTypes.Text */, readText(scnr));\n                }\n                break;\n            }\n        }\n        return token;\n    }\n    function nextToken() {\n        const { currentType, offset, startLoc, endLoc } = _context;\n        _context.lastType = currentType;\n        _context.lastOffset = offset;\n        _context.lastStartLoc = startLoc;\n        _context.lastEndLoc = endLoc;\n        _context.offset = currentOffset();\n        _context.startLoc = currentPosition();\n        if (_scnr.currentChar() === EOF) {\n            return getToken(_context, 14 /* TokenTypes.EOF */);\n        }\n        return readToken(_scnr, _context);\n    }\n    return {\n        nextToken,\n        currentOffset,\n        currentPosition,\n        context\n    };\n}\n\nconst ERROR_DOMAIN$2 = 'parser';\n// Backslash backslash, backslash quote, uHHHH, UHHHHHH.\nconst KNOWN_ESCAPES = /(?:\\\\\\\\|\\\\'|\\\\u([0-9a-fA-F]{4})|\\\\U([0-9a-fA-F]{6}))/g;\nfunction fromEscapeSequence(match, codePoint4, codePoint6) {\n    switch (match) {\n        case `\\\\\\\\`:\n            return `\\\\`;\n        // eslint-disable-next-line no-useless-escape\n        case `\\\\\\'`:\n            // eslint-disable-next-line no-useless-escape\n            return `\\'`;\n        default: {\n            const codePoint = parseInt(codePoint4 || codePoint6, 16);\n            if (codePoint <= 0xd7ff || codePoint >= 0xe000) {\n                return String.fromCodePoint(codePoint);\n            }\n            // invalid ...\n            // Replace them with U+FFFD REPLACEMENT CHARACTER.\n            return '�';\n        }\n    }\n}\nfunction createParser(options = {}) {\n    const location = options.location !== false;\n    const { onError, onWarn } = options;\n    function emitError(tokenzer, code, start, offset, ...args) {\n        const end = tokenzer.currentPosition();\n        end.offset += offset;\n        end.column += offset;\n        if (onError) {\n            const loc = location ? createLocation(start, end) : null;\n            const err = createCompileError(code, loc, {\n                domain: ERROR_DOMAIN$2,\n                args\n            });\n            onError(err);\n        }\n    }\n    function emitWarn(tokenzer, code, start, offset, ...args) {\n        const end = tokenzer.currentPosition();\n        end.offset += offset;\n        end.column += offset;\n        if (onWarn) {\n            const loc = location ? createLocation(start, end) : null;\n            onWarn(createCompileWarn(code, loc, args));\n        }\n    }\n    function startNode(type, offset, loc) {\n        const node = { type };\n        if (location) {\n            node.start = offset;\n            node.end = offset;\n            node.loc = { start: loc, end: loc };\n        }\n        return node;\n    }\n    function endNode(node, offset, pos, type) {\n        if (type) {\n            node.type = type;\n        }\n        if (location) {\n            node.end = offset;\n            if (node.loc) {\n                node.loc.end = pos;\n            }\n        }\n    }\n    function parseText(tokenizer, value) {\n        const context = tokenizer.context();\n        const node = startNode(3 /* NodeTypes.Text */, context.offset, context.startLoc);\n        node.value = value;\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    function parseList(tokenizer, index) {\n        const context = tokenizer.context();\n        const { lastOffset: offset, lastStartLoc: loc } = context; // get brace left loc\n        const node = startNode(5 /* NodeTypes.List */, offset, loc);\n        node.index = parseInt(index, 10);\n        tokenizer.nextToken(); // skip brach right\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    function parseNamed(tokenizer, key, modulo) {\n        const context = tokenizer.context();\n        const { lastOffset: offset, lastStartLoc: loc } = context; // get brace left loc\n        const node = startNode(4 /* NodeTypes.Named */, offset, loc);\n        node.key = key;\n        if (modulo === true) {\n            node.modulo = true;\n        }\n        tokenizer.nextToken(); // skip brach right\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    function parseLiteral(tokenizer, value) {\n        const context = tokenizer.context();\n        const { lastOffset: offset, lastStartLoc: loc } = context; // get brace left loc\n        const node = startNode(9 /* NodeTypes.Literal */, offset, loc);\n        node.value = value.replace(KNOWN_ESCAPES, fromEscapeSequence);\n        tokenizer.nextToken(); // skip brach right\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    function parseLinkedModifier(tokenizer) {\n        const token = tokenizer.nextToken();\n        const context = tokenizer.context();\n        const { lastOffset: offset, lastStartLoc: loc } = context; // get linked dot loc\n        const node = startNode(8 /* NodeTypes.LinkedModifier */, offset, loc);\n        if (token.type !== 12 /* TokenTypes.LinkedModifier */) {\n            // empty modifier\n            emitError(tokenizer, CompileErrorCodes.UNEXPECTED_EMPTY_LINKED_MODIFIER, context.lastStartLoc, 0);\n            node.value = '';\n            endNode(node, offset, loc);\n            return {\n                nextConsumeToken: token,\n                node\n            };\n        }\n        // check token\n        if (token.value == null) {\n            emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n        }\n        node.value = token.value || '';\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return {\n            node\n        };\n    }\n    function parseLinkedKey(tokenizer, value) {\n        const context = tokenizer.context();\n        const node = startNode(7 /* NodeTypes.LinkedKey */, context.offset, context.startLoc);\n        node.value = value;\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    function parseLinked(tokenizer) {\n        const context = tokenizer.context();\n        const linkedNode = startNode(6 /* NodeTypes.Linked */, context.offset, context.startLoc);\n        let token = tokenizer.nextToken();\n        if (token.type === 9 /* TokenTypes.LinkedDot */) {\n            const parsed = parseLinkedModifier(tokenizer);\n            linkedNode.modifier = parsed.node;\n            token = parsed.nextConsumeToken || tokenizer.nextToken();\n        }\n        // asset check token\n        if (token.type !== 10 /* TokenTypes.LinkedDelimiter */) {\n            emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n        }\n        token = tokenizer.nextToken();\n        // skip brace left\n        if (token.type === 2 /* TokenTypes.BraceLeft */) {\n            token = tokenizer.nextToken();\n        }\n        switch (token.type) {\n            case 11 /* TokenTypes.LinkedKey */:\n                if (token.value == null) {\n                    emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                }\n                linkedNode.key = parseLinkedKey(tokenizer, token.value || '');\n                break;\n            case 5 /* TokenTypes.Named */:\n                if (token.value == null) {\n                    emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                }\n                linkedNode.key = parseNamed(tokenizer, token.value || '');\n                break;\n            case 6 /* TokenTypes.List */:\n                if (token.value == null) {\n                    emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                }\n                linkedNode.key = parseList(tokenizer, token.value || '');\n                break;\n            case 7 /* TokenTypes.Literal */:\n                if (token.value == null) {\n                    emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                }\n                linkedNode.key = parseLiteral(tokenizer, token.value || '');\n                break;\n            default: {\n                // empty key\n                emitError(tokenizer, CompileErrorCodes.UNEXPECTED_EMPTY_LINKED_KEY, context.lastStartLoc, 0);\n                const nextContext = tokenizer.context();\n                const emptyLinkedKeyNode = startNode(7 /* NodeTypes.LinkedKey */, nextContext.offset, nextContext.startLoc);\n                emptyLinkedKeyNode.value = '';\n                endNode(emptyLinkedKeyNode, nextContext.offset, nextContext.startLoc);\n                linkedNode.key = emptyLinkedKeyNode;\n                endNode(linkedNode, nextContext.offset, nextContext.startLoc);\n                return {\n                    nextConsumeToken: token,\n                    node: linkedNode\n                };\n            }\n        }\n        endNode(linkedNode, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return {\n            node: linkedNode\n        };\n    }\n    function parseMessage(tokenizer) {\n        const context = tokenizer.context();\n        const startOffset = context.currentType === 1 /* TokenTypes.Pipe */\n            ? tokenizer.currentOffset()\n            : context.offset;\n        const startLoc = context.currentType === 1 /* TokenTypes.Pipe */\n            ? context.endLoc\n            : context.startLoc;\n        const node = startNode(2 /* NodeTypes.Message */, startOffset, startLoc);\n        node.items = [];\n        let nextToken = null;\n        let modulo = null;\n        do {\n            const token = nextToken || tokenizer.nextToken();\n            nextToken = null;\n            switch (token.type) {\n                case 0 /* TokenTypes.Text */:\n                    if (token.value == null) {\n                        emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                    }\n                    node.items.push(parseText(tokenizer, token.value || ''));\n                    break;\n                case 6 /* TokenTypes.List */:\n                    if (token.value == null) {\n                        emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                    }\n                    node.items.push(parseList(tokenizer, token.value || ''));\n                    break;\n                case 4 /* TokenTypes.Modulo */:\n                    modulo = true;\n                    break;\n                case 5 /* TokenTypes.Named */:\n                    if (token.value == null) {\n                        emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                    }\n                    node.items.push(parseNamed(tokenizer, token.value || '', !!modulo));\n                    if (modulo) {\n                        emitWarn(tokenizer, CompileWarnCodes.USE_MODULO_SYNTAX, context.lastStartLoc, 0, getTokenCaption(token));\n                        modulo = null;\n                    }\n                    break;\n                case 7 /* TokenTypes.Literal */:\n                    if (token.value == null) {\n                        emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                    }\n                    node.items.push(parseLiteral(tokenizer, token.value || ''));\n                    break;\n                case 8 /* TokenTypes.LinkedAlias */: {\n                    const parsed = parseLinked(tokenizer);\n                    node.items.push(parsed.node);\n                    nextToken = parsed.nextConsumeToken || null;\n                    break;\n                }\n            }\n        } while (context.currentType !== 14 /* TokenTypes.EOF */ &&\n            context.currentType !== 1 /* TokenTypes.Pipe */);\n        // adjust message node loc\n        const endOffset = context.currentType === 1 /* TokenTypes.Pipe */\n            ? context.lastOffset\n            : tokenizer.currentOffset();\n        const endLoc = context.currentType === 1 /* TokenTypes.Pipe */\n            ? context.lastEndLoc\n            : tokenizer.currentPosition();\n        endNode(node, endOffset, endLoc);\n        return node;\n    }\n    function parsePlural(tokenizer, offset, loc, msgNode) {\n        const context = tokenizer.context();\n        let hasEmptyMessage = msgNode.items.length === 0;\n        const node = startNode(1 /* NodeTypes.Plural */, offset, loc);\n        node.cases = [];\n        node.cases.push(msgNode);\n        do {\n            const msg = parseMessage(tokenizer);\n            if (!hasEmptyMessage) {\n                hasEmptyMessage = msg.items.length === 0;\n            }\n            node.cases.push(msg);\n        } while (context.currentType !== 14 /* TokenTypes.EOF */);\n        if (hasEmptyMessage) {\n            emitError(tokenizer, CompileErrorCodes.MUST_HAVE_MESSAGES_IN_PLURAL, loc, 0);\n        }\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    function parseResource(tokenizer) {\n        const context = tokenizer.context();\n        const { offset, startLoc } = context;\n        const msgNode = parseMessage(tokenizer);\n        if (context.currentType === 14 /* TokenTypes.EOF */) {\n            return msgNode;\n        }\n        else {\n            return parsePlural(tokenizer, offset, startLoc, msgNode);\n        }\n    }\n    function parse(source) {\n        const tokenizer = createTokenizer(source, assign({}, options));\n        const context = tokenizer.context();\n        const node = startNode(0 /* NodeTypes.Resource */, context.offset, context.startLoc);\n        if (location && node.loc) {\n            node.loc.source = source;\n        }\n        node.body = parseResource(tokenizer);\n        if (options.onCacheKey) {\n            node.cacheKey = options.onCacheKey(source);\n        }\n        // assert whether achieved to EOF\n        if (context.currentType !== 14 /* TokenTypes.EOF */) {\n            emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, source[context.offset] || '');\n        }\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    return { parse };\n}\nfunction getTokenCaption(token) {\n    if (token.type === 14 /* TokenTypes.EOF */) {\n        return 'EOF';\n    }\n    const name = (token.value || '').replace(/\\r?\\n/gu, '\\\\n');\n    return name.length > 10 ? name.slice(0, 9) + '…' : name;\n}\n\nfunction createTransformer(ast, options = {} // eslint-disable-line\n) {\n    const _context = {\n        ast,\n        helpers: new Set()\n    };\n    const context = () => _context;\n    const helper = (name) => {\n        _context.helpers.add(name);\n        return name;\n    };\n    return { context, helper };\n}\nfunction traverseNodes(nodes, transformer) {\n    for (let i = 0; i < nodes.length; i++) {\n        traverseNode(nodes[i], transformer);\n    }\n}\nfunction traverseNode(node, transformer) {\n    // TODO: if we need pre-hook of transform, should be implemented to here\n    switch (node.type) {\n        case 1 /* NodeTypes.Plural */:\n            traverseNodes(node.cases, transformer);\n            transformer.helper(\"plural\" /* HelperNameMap.PLURAL */);\n            break;\n        case 2 /* NodeTypes.Message */:\n            traverseNodes(node.items, transformer);\n            break;\n        case 6 /* NodeTypes.Linked */: {\n            const linked = node;\n            traverseNode(linked.key, transformer);\n            transformer.helper(\"linked\" /* HelperNameMap.LINKED */);\n            transformer.helper(\"type\" /* HelperNameMap.TYPE */);\n            break;\n        }\n        case 5 /* NodeTypes.List */:\n            transformer.helper(\"interpolate\" /* HelperNameMap.INTERPOLATE */);\n            transformer.helper(\"list\" /* HelperNameMap.LIST */);\n            break;\n        case 4 /* NodeTypes.Named */:\n            transformer.helper(\"interpolate\" /* HelperNameMap.INTERPOLATE */);\n            transformer.helper(\"named\" /* HelperNameMap.NAMED */);\n            break;\n    }\n    // TODO: if we need post-hook of transform, should be implemented to here\n}\n// transform AST\nfunction transform(ast, options = {} // eslint-disable-line\n) {\n    const transformer = createTransformer(ast);\n    transformer.helper(\"normalize\" /* HelperNameMap.NORMALIZE */);\n    // traverse\n    ast.body && traverseNode(ast.body, transformer);\n    // set meta information\n    const context = transformer.context();\n    ast.helpers = Array.from(context.helpers);\n}\n\nfunction optimize(ast) {\n    const body = ast.body;\n    if (body.type === 2 /* NodeTypes.Message */) {\n        optimizeMessageNode(body);\n    }\n    else {\n        body.cases.forEach(c => optimizeMessageNode(c));\n    }\n    return ast;\n}\nfunction optimizeMessageNode(message) {\n    if (message.items.length === 1) {\n        const item = message.items[0];\n        if (item.type === 3 /* NodeTypes.Text */ || item.type === 9 /* NodeTypes.Literal */) {\n            message.static = item.value;\n            delete item.value; // optimization for size\n        }\n    }\n    else {\n        const values = [];\n        for (let i = 0; i < message.items.length; i++) {\n            const item = message.items[i];\n            if (!(item.type === 3 /* NodeTypes.Text */ || item.type === 9 /* NodeTypes.Literal */)) {\n                break;\n            }\n            if (item.value == null) {\n                break;\n            }\n            values.push(item.value);\n        }\n        if (values.length === message.items.length) {\n            message.static = join(values);\n            for (let i = 0; i < message.items.length; i++) {\n                const item = message.items[i];\n                if (item.type === 3 /* NodeTypes.Text */ || item.type === 9 /* NodeTypes.Literal */) {\n                    delete item.value; // optimization for size\n                }\n            }\n        }\n    }\n}\n\nconst ERROR_DOMAIN$1 = 'minifier';\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction minify(node) {\n    node.t = node.type;\n    switch (node.type) {\n        case 0 /* NodeTypes.Resource */: {\n            const resource = node;\n            minify(resource.body);\n            resource.b = resource.body;\n            delete resource.body;\n            break;\n        }\n        case 1 /* NodeTypes.Plural */: {\n            const plural = node;\n            const cases = plural.cases;\n            for (let i = 0; i < cases.length; i++) {\n                minify(cases[i]);\n            }\n            plural.c = cases;\n            delete plural.cases;\n            break;\n        }\n        case 2 /* NodeTypes.Message */: {\n            const message = node;\n            const items = message.items;\n            for (let i = 0; i < items.length; i++) {\n                minify(items[i]);\n            }\n            message.i = items;\n            delete message.items;\n            if (message.static) {\n                message.s = message.static;\n                delete message.static;\n            }\n            break;\n        }\n        case 3 /* NodeTypes.Text */:\n        case 9 /* NodeTypes.Literal */:\n        case 8 /* NodeTypes.LinkedModifier */:\n        case 7 /* NodeTypes.LinkedKey */: {\n            const valueNode = node;\n            if (valueNode.value) {\n                valueNode.v = valueNode.value;\n                delete valueNode.value;\n            }\n            break;\n        }\n        case 6 /* NodeTypes.Linked */: {\n            const linked = node;\n            minify(linked.key);\n            linked.k = linked.key;\n            delete linked.key;\n            if (linked.modifier) {\n                minify(linked.modifier);\n                linked.m = linked.modifier;\n                delete linked.modifier;\n            }\n            break;\n        }\n        case 5 /* NodeTypes.List */: {\n            const list = node;\n            list.i = list.index;\n            delete list.index;\n            break;\n        }\n        case 4 /* NodeTypes.Named */: {\n            const named = node;\n            named.k = named.key;\n            delete named.key;\n            break;\n        }\n        default:\n            {\n                throw createCompileError(CompileErrorCodes.UNHANDLED_MINIFIER_NODE_TYPE, null, {\n                    domain: ERROR_DOMAIN$1,\n                    args: [node.type]\n                });\n            }\n    }\n    delete node.type;\n}\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\n// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference types=\"source-map-js\" />\nconst ERROR_DOMAIN = 'parser';\nfunction createCodeGenerator(ast, options) {\n    const { sourceMap, filename, breakLineCode, needIndent: _needIndent } = options;\n    const location = options.location !== false;\n    const _context = {\n        filename,\n        code: '',\n        column: 1,\n        line: 1,\n        offset: 0,\n        map: undefined,\n        breakLineCode,\n        needIndent: _needIndent,\n        indentLevel: 0\n    };\n    if (location && ast.loc) {\n        _context.source = ast.loc.source;\n    }\n    const context = () => _context;\n    function push(code, node) {\n        _context.code += code;\n    }\n    function _newline(n, withBreakLine = true) {\n        const _breakLineCode = withBreakLine ? breakLineCode : '';\n        push(_needIndent ? _breakLineCode + `  `.repeat(n) : _breakLineCode);\n    }\n    function indent(withNewLine = true) {\n        const level = ++_context.indentLevel;\n        withNewLine && _newline(level);\n    }\n    function deindent(withNewLine = true) {\n        const level = --_context.indentLevel;\n        withNewLine && _newline(level);\n    }\n    function newline() {\n        _newline(_context.indentLevel);\n    }\n    const helper = (key) => `_${key}`;\n    const needIndent = () => _context.needIndent;\n    return {\n        context,\n        push,\n        indent,\n        deindent,\n        newline,\n        helper,\n        needIndent\n    };\n}\nfunction generateLinkedNode(generator, node) {\n    const { helper } = generator;\n    generator.push(`${helper(\"linked\" /* HelperNameMap.LINKED */)}(`);\n    generateNode(generator, node.key);\n    if (node.modifier) {\n        generator.push(`, `);\n        generateNode(generator, node.modifier);\n        generator.push(`, _type`);\n    }\n    else {\n        generator.push(`, undefined, _type`);\n    }\n    generator.push(`)`);\n}\nfunction generateMessageNode(generator, node) {\n    const { helper, needIndent } = generator;\n    generator.push(`${helper(\"normalize\" /* HelperNameMap.NORMALIZE */)}([`);\n    generator.indent(needIndent());\n    const length = node.items.length;\n    for (let i = 0; i < length; i++) {\n        generateNode(generator, node.items[i]);\n        if (i === length - 1) {\n            break;\n        }\n        generator.push(', ');\n    }\n    generator.deindent(needIndent());\n    generator.push('])');\n}\nfunction generatePluralNode(generator, node) {\n    const { helper, needIndent } = generator;\n    if (node.cases.length > 1) {\n        generator.push(`${helper(\"plural\" /* HelperNameMap.PLURAL */)}([`);\n        generator.indent(needIndent());\n        const length = node.cases.length;\n        for (let i = 0; i < length; i++) {\n            generateNode(generator, node.cases[i]);\n            if (i === length - 1) {\n                break;\n            }\n            generator.push(', ');\n        }\n        generator.deindent(needIndent());\n        generator.push(`])`);\n    }\n}\nfunction generateResource(generator, node) {\n    if (node.body) {\n        generateNode(generator, node.body);\n    }\n    else {\n        generator.push('null');\n    }\n}\nfunction generateNode(generator, node) {\n    const { helper } = generator;\n    switch (node.type) {\n        case 0 /* NodeTypes.Resource */:\n            generateResource(generator, node);\n            break;\n        case 1 /* NodeTypes.Plural */:\n            generatePluralNode(generator, node);\n            break;\n        case 2 /* NodeTypes.Message */:\n            generateMessageNode(generator, node);\n            break;\n        case 6 /* NodeTypes.Linked */:\n            generateLinkedNode(generator, node);\n            break;\n        case 8 /* NodeTypes.LinkedModifier */:\n            generator.push(JSON.stringify(node.value), node);\n            break;\n        case 7 /* NodeTypes.LinkedKey */:\n            generator.push(JSON.stringify(node.value), node);\n            break;\n        case 5 /* NodeTypes.List */:\n            generator.push(`${helper(\"interpolate\" /* HelperNameMap.INTERPOLATE */)}(${helper(\"list\" /* HelperNameMap.LIST */)}(${node.index}))`, node);\n            break;\n        case 4 /* NodeTypes.Named */:\n            generator.push(`${helper(\"interpolate\" /* HelperNameMap.INTERPOLATE */)}(${helper(\"named\" /* HelperNameMap.NAMED */)}(${JSON.stringify(node.key)}))`, node);\n            break;\n        case 9 /* NodeTypes.Literal */:\n            generator.push(JSON.stringify(node.value), node);\n            break;\n        case 3 /* NodeTypes.Text */:\n            generator.push(JSON.stringify(node.value), node);\n            break;\n        default:\n            {\n                throw createCompileError(CompileErrorCodes.UNHANDLED_CODEGEN_NODE_TYPE, null, {\n                    domain: ERROR_DOMAIN,\n                    args: [node.type]\n                });\n            }\n    }\n}\n// generate code from AST\nconst generate = (ast, options = {} // eslint-disable-line\n) => {\n    const mode = isString(options.mode) ? options.mode : 'normal';\n    const filename = isString(options.filename)\n        ? options.filename\n        : 'message.intl';\n    const sourceMap = !!options.sourceMap;\n    // prettier-ignore\n    const breakLineCode = options.breakLineCode != null\n        ? options.breakLineCode\n        : mode === 'arrow'\n            ? ';'\n            : '\\n';\n    const needIndent = options.needIndent ? options.needIndent : mode !== 'arrow';\n    const helpers = ast.helpers || [];\n    const generator = createCodeGenerator(ast, {\n        mode,\n        filename,\n        sourceMap,\n        breakLineCode,\n        needIndent\n    });\n    generator.push(mode === 'normal' ? `function __msg__ (ctx) {` : `(ctx) => {`);\n    generator.indent(needIndent);\n    if (helpers.length > 0) {\n        generator.push(`const { ${join(helpers.map(s => `${s}: _${s}`), ', ')} } = ctx`);\n        generator.newline();\n    }\n    generator.push(`return `);\n    generateNode(generator, ast);\n    generator.deindent(needIndent);\n    generator.push(`}`);\n    delete ast.helpers;\n    const { code, map } = generator.context();\n    return {\n        ast,\n        code,\n        map: map ? map.toJSON() : undefined // eslint-disable-line @typescript-eslint/no-explicit-any\n    };\n};\n\nfunction baseCompile(source, options = {}) {\n    const assignedOptions = assign({}, options);\n    const jit = !!assignedOptions.jit;\n    const enalbeMinify = !!assignedOptions.minify;\n    const enambeOptimize = assignedOptions.optimize == null ? true : assignedOptions.optimize;\n    // parse source codes\n    const parser = createParser(assignedOptions);\n    const ast = parser.parse(source);\n    if (!jit) {\n        // transform ASTs\n        transform(ast, assignedOptions);\n        // generate javascript codes\n        return generate(ast, assignedOptions);\n    }\n    else {\n        // optimize ASTs\n        enambeOptimize && optimize(ast);\n        // minimize ASTs\n        enalbeMinify && minify(ast);\n        // In JIT mode, no ast transform, no code generation.\n        return { ast, code: '' };\n    }\n}\n\nexport { CompileErrorCodes, CompileWarnCodes, ERROR_DOMAIN$2 as ERROR_DOMAIN, LOCATION_STUB, baseCompile, createCompileError, createCompileWarn, createLocation, createParser, createPosition, defaultOnError, detectHtmlTag, errorMessages, warnMessages };\n","/*!\n  * core-base v9.14.0\n  * (c) 2024 kazuya kawaguchi\n  * Released under the MIT License.\n  */\nimport { getGlobalThis, isObject, isFunction, isString, isNumber, isPlainObject, assign, join, toDisplayString, isArray, incrementer, format as format$1, isPromise, isBoolean, warn, isRegExp, warnOnce, escapeHtml, inBrowser, mark, measure, isEmptyObject, generateCodeFrame, generateFormatCacheKey, isDate } from '@intlify/shared';\nimport { CompileWarnCodes, CompileErrorCodes, createCompileError, detectHtmlTag, defaultOnError, baseCompile as baseCompile$1 } from '@intlify/message-compiler';\nexport { CompileErrorCodes, createCompileError } from '@intlify/message-compiler';\n\n/**\n * This is only called in esm-bundler builds.\n * istanbul-ignore-next\n */\nfunction initFeatureFlags() {\n    if (typeof __INTLIFY_PROD_DEVTOOLS__ !== 'boolean') {\n        getGlobalThis().__INTLIFY_PROD_DEVTOOLS__ = false;\n    }\n    if (typeof __INTLIFY_JIT_COMPILATION__ !== 'boolean') {\n        getGlobalThis().__INTLIFY_JIT_COMPILATION__ = false;\n    }\n    if (typeof __INTLIFY_DROP_MESSAGE_COMPILER__ !== 'boolean') {\n        getGlobalThis().__INTLIFY_DROP_MESSAGE_COMPILER__ = false;\n    }\n}\n\nconst pathStateMachine =  [];\npathStateMachine[0 /* States.BEFORE_PATH */] = {\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [0 /* States.BEFORE_PATH */],\n    [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */]\n};\npathStateMachine[1 /* States.IN_PATH */] = {\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [1 /* States.IN_PATH */],\n    [\".\" /* PathCharTypes.DOT */]: [2 /* States.BEFORE_IDENT */],\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */]\n};\npathStateMachine[2 /* States.BEFORE_IDENT */] = {\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [2 /* States.BEFORE_IDENT */],\n    [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n    [\"0\" /* PathCharTypes.ZERO */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */]\n};\npathStateMachine[3 /* States.IN_IDENT */] = {\n    [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n    [\"0\" /* PathCharTypes.ZERO */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [1 /* States.IN_PATH */, 1 /* Actions.PUSH */],\n    [\".\" /* PathCharTypes.DOT */]: [2 /* States.BEFORE_IDENT */, 1 /* Actions.PUSH */],\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */, 1 /* Actions.PUSH */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */, 1 /* Actions.PUSH */]\n};\npathStateMachine[4 /* States.IN_SUB_PATH */] = {\n    [\"'\" /* PathCharTypes.SINGLE_QUOTE */]: [5 /* States.IN_SINGLE_QUOTE */, 0 /* Actions.APPEND */],\n    [\"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */]: [6 /* States.IN_DOUBLE_QUOTE */, 0 /* Actions.APPEND */],\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [\n        4 /* States.IN_SUB_PATH */,\n        2 /* Actions.INC_SUB_PATH_DEPTH */\n    ],\n    [\"]\" /* PathCharTypes.RIGHT_BRACKET */]: [1 /* States.IN_PATH */, 3 /* Actions.PUSH_SUB_PATH */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\n    [\"l\" /* PathCharTypes.ELSE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */]\n};\npathStateMachine[5 /* States.IN_SINGLE_QUOTE */] = {\n    [\"'\" /* PathCharTypes.SINGLE_QUOTE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\n    [\"l\" /* PathCharTypes.ELSE */]: [5 /* States.IN_SINGLE_QUOTE */, 0 /* Actions.APPEND */]\n};\npathStateMachine[6 /* States.IN_DOUBLE_QUOTE */] = {\n    [\"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\n    [\"l\" /* PathCharTypes.ELSE */]: [6 /* States.IN_DOUBLE_QUOTE */, 0 /* Actions.APPEND */]\n};\n/**\n * Check if an expression is a literal value.\n */\nconst literalValueRE = /^\\s?(?:true|false|-?[\\d.]+|'[^']*'|\"[^\"]*\")\\s?$/;\nfunction isLiteral(exp) {\n    return literalValueRE.test(exp);\n}\n/**\n * Strip quotes from a string\n */\nfunction stripQuotes(str) {\n    const a = str.charCodeAt(0);\n    const b = str.charCodeAt(str.length - 1);\n    return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n/**\n * Determine the type of a character in a keypath.\n */\nfunction getPathCharType(ch) {\n    if (ch === undefined || ch === null) {\n        return \"o\" /* PathCharTypes.END_OF_FAIL */;\n    }\n    const code = ch.charCodeAt(0);\n    switch (code) {\n        case 0x5b: // [\n        case 0x5d: // ]\n        case 0x2e: // .\n        case 0x22: // \"\n        case 0x27: // '\n            return ch;\n        case 0x5f: // _\n        case 0x24: // $\n        case 0x2d: // -\n            return \"i\" /* PathCharTypes.IDENT */;\n        case 0x09: // Tab (HT)\n        case 0x0a: // Newline (LF)\n        case 0x0d: // Return (CR)\n        case 0xa0: // No-break space (NBSP)\n        case 0xfeff: // Byte Order Mark (BOM)\n        case 0x2028: // Line Separator (LS)\n        case 0x2029: // Paragraph Separator (PS)\n            return \"w\" /* PathCharTypes.WORKSPACE */;\n    }\n    return \"i\" /* PathCharTypes.IDENT */;\n}\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n */\nfunction formatSubPath(path) {\n    const trimmed = path.trim();\n    // invalid leading 0\n    if (path.charAt(0) === '0' && isNaN(parseInt(path))) {\n        return false;\n    }\n    return isLiteral(trimmed)\n        ? stripQuotes(trimmed)\n        : \"*\" /* PathCharTypes.ASTARISK */ + trimmed;\n}\n/**\n * Parse a string path into an array of segments\n */\nfunction parse(path) {\n    const keys = [];\n    let index = -1;\n    let mode = 0 /* States.BEFORE_PATH */;\n    let subPathDepth = 0;\n    let c;\n    let key; // eslint-disable-line\n    let newChar;\n    let type;\n    let transition;\n    let action;\n    let typeMap;\n    const actions = [];\n    actions[0 /* Actions.APPEND */] = () => {\n        if (key === undefined) {\n            key = newChar;\n        }\n        else {\n            key += newChar;\n        }\n    };\n    actions[1 /* Actions.PUSH */] = () => {\n        if (key !== undefined) {\n            keys.push(key);\n            key = undefined;\n        }\n    };\n    actions[2 /* Actions.INC_SUB_PATH_DEPTH */] = () => {\n        actions[0 /* Actions.APPEND */]();\n        subPathDepth++;\n    };\n    actions[3 /* Actions.PUSH_SUB_PATH */] = () => {\n        if (subPathDepth > 0) {\n            subPathDepth--;\n            mode = 4 /* States.IN_SUB_PATH */;\n            actions[0 /* Actions.APPEND */]();\n        }\n        else {\n            subPathDepth = 0;\n            if (key === undefined) {\n                return false;\n            }\n            key = formatSubPath(key);\n            if (key === false) {\n                return false;\n            }\n            else {\n                actions[1 /* Actions.PUSH */]();\n            }\n        }\n    };\n    function maybeUnescapeQuote() {\n        const nextChar = path[index + 1];\n        if ((mode === 5 /* States.IN_SINGLE_QUOTE */ &&\n            nextChar === \"'\" /* PathCharTypes.SINGLE_QUOTE */) ||\n            (mode === 6 /* States.IN_DOUBLE_QUOTE */ &&\n                nextChar === \"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */)) {\n            index++;\n            newChar = '\\\\' + nextChar;\n            actions[0 /* Actions.APPEND */]();\n            return true;\n        }\n    }\n    while (mode !== null) {\n        index++;\n        c = path[index];\n        if (c === '\\\\' && maybeUnescapeQuote()) {\n            continue;\n        }\n        type = getPathCharType(c);\n        typeMap = pathStateMachine[mode];\n        transition = typeMap[type] || typeMap[\"l\" /* PathCharTypes.ELSE */] || 8 /* States.ERROR */;\n        // check parse error\n        if (transition === 8 /* States.ERROR */) {\n            return;\n        }\n        mode = transition[0];\n        if (transition[1] !== undefined) {\n            action = actions[transition[1]];\n            if (action) {\n                newChar = c;\n                if (action() === false) {\n                    return;\n                }\n            }\n        }\n        // check parse finish\n        if (mode === 7 /* States.AFTER_PATH */) {\n            return keys;\n        }\n    }\n}\n// path token cache\nconst cache = new Map();\n/**\n * key-value message resolver\n *\n * @remarks\n * Resolves messages with the key-value structure. Note that messages with a hierarchical structure such as objects cannot be resolved\n *\n * @param obj - A target object to be resolved with path\n * @param path - A {@link Path | path} to resolve the value of message\n *\n * @returns A resolved {@link PathValue | path value}\n *\n * @VueI18nGeneral\n */\nfunction resolveWithKeyValue(obj, path) {\n    return isObject(obj) ? obj[path] : null;\n}\n/**\n * message resolver\n *\n * @remarks\n * Resolves messages. messages with a hierarchical structure such as objects can be resolved. This resolver is used in VueI18n as default.\n *\n * @param obj - A target object to be resolved with path\n * @param path - A {@link Path | path} to resolve the value of message\n *\n * @returns A resolved {@link PathValue | path value}\n *\n * @VueI18nGeneral\n */\nfunction resolveValue(obj, path) {\n    // check object\n    if (!isObject(obj)) {\n        return null;\n    }\n    // parse path\n    let hit = cache.get(path);\n    if (!hit) {\n        hit = parse(path);\n        if (hit) {\n            cache.set(path, hit);\n        }\n    }\n    // check hit\n    if (!hit) {\n        return null;\n    }\n    // resolve path value\n    const len = hit.length;\n    let last = obj;\n    let i = 0;\n    while (i < len) {\n        const val = last[hit[i]];\n        if (val === undefined) {\n            return null;\n        }\n        if (isFunction(last)) {\n            return null;\n        }\n        last = val;\n        i++;\n    }\n    return last;\n}\n\nconst DEFAULT_MODIFIER = (str) => str;\nconst DEFAULT_MESSAGE = (ctx) => ''; // eslint-disable-line\nconst DEFAULT_MESSAGE_DATA_TYPE = 'text';\nconst DEFAULT_NORMALIZE = (values) => values.length === 0 ? '' : join(values);\nconst DEFAULT_INTERPOLATE = toDisplayString;\nfunction pluralDefault(choice, choicesLength) {\n    choice = Math.abs(choice);\n    if (choicesLength === 2) {\n        // prettier-ignore\n        return choice\n            ? choice > 1\n                ? 1\n                : 0\n            : 1;\n    }\n    return choice ? Math.min(choice, 2) : 0;\n}\nfunction getPluralIndex(options) {\n    // prettier-ignore\n    const index = isNumber(options.pluralIndex)\n        ? options.pluralIndex\n        : -1;\n    // prettier-ignore\n    return options.named && (isNumber(options.named.count) || isNumber(options.named.n))\n        ? isNumber(options.named.count)\n            ? options.named.count\n            : isNumber(options.named.n)\n                ? options.named.n\n                : index\n        : index;\n}\nfunction normalizeNamed(pluralIndex, props) {\n    if (!props.count) {\n        props.count = pluralIndex;\n    }\n    if (!props.n) {\n        props.n = pluralIndex;\n    }\n}\nfunction createMessageContext(options = {}) {\n    const locale = options.locale;\n    const pluralIndex = getPluralIndex(options);\n    const pluralRule = isObject(options.pluralRules) &&\n        isString(locale) &&\n        isFunction(options.pluralRules[locale])\n        ? options.pluralRules[locale]\n        : pluralDefault;\n    const orgPluralRule = isObject(options.pluralRules) &&\n        isString(locale) &&\n        isFunction(options.pluralRules[locale])\n        ? pluralDefault\n        : undefined;\n    const plural = (messages) => {\n        return messages[pluralRule(pluralIndex, messages.length, orgPluralRule)];\n    };\n    const _list = options.list || [];\n    const list = (index) => _list[index];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const _named = options.named || {};\n    isNumber(options.pluralIndex) && normalizeNamed(pluralIndex, _named);\n    const named = (key) => _named[key];\n    function message(key) {\n        // prettier-ignore\n        const msg = isFunction(options.messages)\n            ? options.messages(key)\n            : isObject(options.messages)\n                ? options.messages[key]\n                : false;\n        return !msg\n            ? options.parent\n                ? options.parent.message(key) // resolve from parent messages\n                : DEFAULT_MESSAGE\n            : msg;\n    }\n    const _modifier = (name) => options.modifiers\n        ? options.modifiers[name]\n        : DEFAULT_MODIFIER;\n    const normalize = isPlainObject(options.processor) && isFunction(options.processor.normalize)\n        ? options.processor.normalize\n        : DEFAULT_NORMALIZE;\n    const interpolate = isPlainObject(options.processor) &&\n        isFunction(options.processor.interpolate)\n        ? options.processor.interpolate\n        : DEFAULT_INTERPOLATE;\n    const type = isPlainObject(options.processor) && isString(options.processor.type)\n        ? options.processor.type\n        : DEFAULT_MESSAGE_DATA_TYPE;\n    const linked = (key, ...args) => {\n        const [arg1, arg2] = args;\n        let type = 'text';\n        let modifier = '';\n        if (args.length === 1) {\n            if (isObject(arg1)) {\n                modifier = arg1.modifier || modifier;\n                type = arg1.type || type;\n            }\n            else if (isString(arg1)) {\n                modifier = arg1 || modifier;\n            }\n        }\n        else if (args.length === 2) {\n            if (isString(arg1)) {\n                modifier = arg1 || modifier;\n            }\n            if (isString(arg2)) {\n                type = arg2 || type;\n            }\n        }\n        const ret = message(key)(ctx);\n        const msg = \n        // The message in vnode resolved with linked are returned as an array by processor.nomalize\n        type === 'vnode' && isArray(ret) && modifier\n            ? ret[0]\n            : ret;\n        return modifier ? _modifier(modifier)(msg, type) : msg;\n    };\n    const ctx = {\n        [\"list\" /* HelperNameMap.LIST */]: list,\n        [\"named\" /* HelperNameMap.NAMED */]: named,\n        [\"plural\" /* HelperNameMap.PLURAL */]: plural,\n        [\"linked\" /* HelperNameMap.LINKED */]: linked,\n        [\"message\" /* HelperNameMap.MESSAGE */]: message,\n        [\"type\" /* HelperNameMap.TYPE */]: type,\n        [\"interpolate\" /* HelperNameMap.INTERPOLATE */]: interpolate,\n        [\"normalize\" /* HelperNameMap.NORMALIZE */]: normalize,\n        [\"values\" /* HelperNameMap.VALUES */]: assign({}, _list, _named)\n    };\n    return ctx;\n}\n\nlet devtools = null;\nfunction setDevToolsHook(hook) {\n    devtools = hook;\n}\nfunction getDevToolsHook() {\n    return devtools;\n}\nfunction initI18nDevTools(i18n, version, meta) {\n    // TODO: queue if devtools is undefined\n    devtools &&\n        devtools.emit(\"i18n:init\" /* IntlifyDevToolsHooks.I18nInit */, {\n            timestamp: Date.now(),\n            i18n,\n            version,\n            meta\n        });\n}\nconst translateDevTools = /* #__PURE__*/ createDevToolsHook(\"function:translate\" /* IntlifyDevToolsHooks.FunctionTranslate */);\nfunction createDevToolsHook(hook) {\n    return (payloads) => devtools && devtools.emit(hook, payloads);\n}\n\nconst code$1 = CompileWarnCodes.__EXTEND_POINT__;\nconst inc$1 = incrementer(code$1);\nconst CoreWarnCodes = {\n    NOT_FOUND_KEY: code$1, // 2\n    FALLBACK_TO_TRANSLATE: inc$1(), // 3\n    CANNOT_FORMAT_NUMBER: inc$1(), // 4\n    FALLBACK_TO_NUMBER_FORMAT: inc$1(), // 5\n    CANNOT_FORMAT_DATE: inc$1(), // 6\n    FALLBACK_TO_DATE_FORMAT: inc$1(), // 7\n    EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER: inc$1(), // 8\n    __EXTEND_POINT__: inc$1() // 9\n};\n/** @internal */\nconst warnMessages = {\n    [CoreWarnCodes.NOT_FOUND_KEY]: `Not found '{key}' key in '{locale}' locale messages.`,\n    [CoreWarnCodes.FALLBACK_TO_TRANSLATE]: `Fall back to translate '{key}' key with '{target}' locale.`,\n    [CoreWarnCodes.CANNOT_FORMAT_NUMBER]: `Cannot format a number value due to not supported Intl.NumberFormat.`,\n    [CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT]: `Fall back to number format '{key}' key with '{target}' locale.`,\n    [CoreWarnCodes.CANNOT_FORMAT_DATE]: `Cannot format a date value due to not supported Intl.DateTimeFormat.`,\n    [CoreWarnCodes.FALLBACK_TO_DATE_FORMAT]: `Fall back to datetime format '{key}' key with '{target}' locale.`,\n    [CoreWarnCodes.EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER]: `This project is using Custom Message Compiler, which is an experimental feature. It may receive breaking changes or be removed in the future.`\n};\nfunction getWarnMessage(code, ...args) {\n    return format$1(warnMessages[code], ...args);\n}\n\nconst code = CompileErrorCodes.__EXTEND_POINT__;\nconst inc = incrementer(code);\nconst CoreErrorCodes = {\n    INVALID_ARGUMENT: code, // 17\n    INVALID_DATE_ARGUMENT: inc(), // 18\n    INVALID_ISO_DATE_ARGUMENT: inc(), // 19\n    NOT_SUPPORT_NON_STRING_MESSAGE: inc(), // 20\n    NOT_SUPPORT_LOCALE_PROMISE_VALUE: inc(), // 21\n    NOT_SUPPORT_LOCALE_ASYNC_FUNCTION: inc(), // 22\n    NOT_SUPPORT_LOCALE_TYPE: inc(), // 23\n    __EXTEND_POINT__: inc() // 24\n};\nfunction createCoreError(code) {\n    return createCompileError(code, null, (process.env.NODE_ENV !== 'production') ? { messages: errorMessages } : undefined);\n}\n/** @internal */\nconst errorMessages = {\n    [CoreErrorCodes.INVALID_ARGUMENT]: 'Invalid arguments',\n    [CoreErrorCodes.INVALID_DATE_ARGUMENT]: 'The date provided is an invalid Date object.' +\n        'Make sure your Date represents a valid date.',\n    [CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT]: 'The argument provided is not a valid ISO date string',\n    [CoreErrorCodes.NOT_SUPPORT_NON_STRING_MESSAGE]: 'Not support non-string message',\n    [CoreErrorCodes.NOT_SUPPORT_LOCALE_PROMISE_VALUE]: 'cannot support promise value',\n    [CoreErrorCodes.NOT_SUPPORT_LOCALE_ASYNC_FUNCTION]: 'cannot support async function',\n    [CoreErrorCodes.NOT_SUPPORT_LOCALE_TYPE]: 'cannot support locale type'\n};\n\n/** @internal */\nfunction getLocale(context, options) {\n    return options.locale != null\n        ? resolveLocale(options.locale)\n        : resolveLocale(context.locale);\n}\nlet _resolveLocale;\n/** @internal */\nfunction resolveLocale(locale) {\n    if (isString(locale)) {\n        return locale;\n    }\n    else {\n        if (isFunction(locale)) {\n            if (locale.resolvedOnce && _resolveLocale != null) {\n                return _resolveLocale;\n            }\n            else if (locale.constructor.name === 'Function') {\n                const resolve = locale();\n                if (isPromise(resolve)) {\n                    throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_PROMISE_VALUE);\n                }\n                return (_resolveLocale = resolve);\n            }\n            else {\n                throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_ASYNC_FUNCTION);\n            }\n        }\n        else {\n            throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_TYPE);\n        }\n    }\n}\n/**\n * Fallback with simple implemenation\n *\n * @remarks\n * A fallback locale function implemented with a simple fallback algorithm.\n *\n * Basically, it returns the value as specified in the `fallbackLocale` props, and is processed with the fallback inside intlify.\n *\n * @param ctx - A {@link CoreContext | context}\n * @param fallback - A {@link FallbackLocale | fallback locale}\n * @param start - A starting {@link Locale | locale}\n *\n * @returns Fallback locales\n *\n * @VueI18nGeneral\n */\nfunction fallbackWithSimple(ctx, fallback, start // eslint-disable-line @typescript-eslint/no-unused-vars\n) {\n    // prettier-ignore\n    return [...new Set([\n            start,\n            ...(isArray(fallback)\n                ? fallback\n                : isObject(fallback)\n                    ? Object.keys(fallback)\n                    : isString(fallback)\n                        ? [fallback]\n                        : [start])\n        ])];\n}\n/**\n * Fallback with locale chain\n *\n * @remarks\n * A fallback locale function implemented with a fallback chain algorithm. It's used in VueI18n as default.\n *\n * @param ctx - A {@link CoreContext | context}\n * @param fallback - A {@link FallbackLocale | fallback locale}\n * @param start - A starting {@link Locale | locale}\n *\n * @returns Fallback locales\n *\n * @VueI18nSee [Fallbacking](../guide/essentials/fallback)\n *\n * @VueI18nGeneral\n */\nfunction fallbackWithLocaleChain(ctx, fallback, start) {\n    const startLocale = isString(start) ? start : DEFAULT_LOCALE;\n    const context = ctx;\n    if (!context.__localeChainCache) {\n        context.__localeChainCache = new Map();\n    }\n    let chain = context.__localeChainCache.get(startLocale);\n    if (!chain) {\n        chain = [];\n        // first block defined by start\n        let block = [start];\n        // while any intervening block found\n        while (isArray(block)) {\n            block = appendBlockToChain(chain, block, fallback);\n        }\n        // prettier-ignore\n        // last block defined by default\n        const defaults = isArray(fallback) || !isPlainObject(fallback)\n            ? fallback\n            : fallback['default']\n                ? fallback['default']\n                : null;\n        // convert defaults to array\n        block = isString(defaults) ? [defaults] : defaults;\n        if (isArray(block)) {\n            appendBlockToChain(chain, block, false);\n        }\n        context.__localeChainCache.set(startLocale, chain);\n    }\n    return chain;\n}\nfunction appendBlockToChain(chain, block, blocks) {\n    let follow = true;\n    for (let i = 0; i < block.length && isBoolean(follow); i++) {\n        const locale = block[i];\n        if (isString(locale)) {\n            follow = appendLocaleToChain(chain, block[i], blocks);\n        }\n    }\n    return follow;\n}\nfunction appendLocaleToChain(chain, locale, blocks) {\n    let follow;\n    const tokens = locale.split('-');\n    do {\n        const target = tokens.join('-');\n        follow = appendItemToChain(chain, target, blocks);\n        tokens.splice(-1, 1);\n    } while (tokens.length && follow === true);\n    return follow;\n}\nfunction appendItemToChain(chain, target, blocks) {\n    let follow = false;\n    if (!chain.includes(target)) {\n        follow = true;\n        if (target) {\n            follow = target[target.length - 1] !== '!';\n            const locale = target.replace(/!/g, '');\n            chain.push(locale);\n            if ((isArray(blocks) || isPlainObject(blocks)) &&\n                blocks[locale] // eslint-disable-line @typescript-eslint/no-explicit-any\n            ) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                follow = blocks[locale];\n            }\n        }\n    }\n    return follow;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Intlify core-base version\n * @internal\n */\nconst VERSION = '9.14.0';\nconst NOT_REOSLVED = -1;\nconst DEFAULT_LOCALE = 'en-US';\nconst MISSING_RESOLVE_VALUE = '';\nconst capitalize = (str) => `${str.charAt(0).toLocaleUpperCase()}${str.substr(1)}`;\nfunction getDefaultLinkedModifiers() {\n    return {\n        upper: (val, type) => {\n            // prettier-ignore\n            return type === 'text' && isString(val)\n                ? val.toUpperCase()\n                : type === 'vnode' && isObject(val) && '__v_isVNode' in val\n                    ? val.children.toUpperCase()\n                    : val;\n        },\n        lower: (val, type) => {\n            // prettier-ignore\n            return type === 'text' && isString(val)\n                ? val.toLowerCase()\n                : type === 'vnode' && isObject(val) && '__v_isVNode' in val\n                    ? val.children.toLowerCase()\n                    : val;\n        },\n        capitalize: (val, type) => {\n            // prettier-ignore\n            return (type === 'text' && isString(val)\n                ? capitalize(val)\n                : type === 'vnode' && isObject(val) && '__v_isVNode' in val\n                    ? capitalize(val.children)\n                    : val);\n        }\n    };\n}\nlet _compiler;\nfunction registerMessageCompiler(compiler) {\n    _compiler = compiler;\n}\nlet _resolver;\n/**\n * Register the message resolver\n *\n * @param resolver - A {@link MessageResolver} function\n *\n * @VueI18nGeneral\n */\nfunction registerMessageResolver(resolver) {\n    _resolver = resolver;\n}\nlet _fallbacker;\n/**\n * Register the locale fallbacker\n *\n * @param fallbacker - A {@link LocaleFallbacker} function\n *\n * @VueI18nGeneral\n */\nfunction registerLocaleFallbacker(fallbacker) {\n    _fallbacker = fallbacker;\n}\n// Additional Meta for Intlify DevTools\nlet _additionalMeta =  null;\n/* #__NO_SIDE_EFFECTS__ */\nconst setAdditionalMeta = (meta) => {\n    _additionalMeta = meta;\n};\n/* #__NO_SIDE_EFFECTS__ */\nconst getAdditionalMeta = () => _additionalMeta;\nlet _fallbackContext = null;\nconst setFallbackContext = (context) => {\n    _fallbackContext = context;\n};\nconst getFallbackContext = () => _fallbackContext;\n// ID for CoreContext\nlet _cid = 0;\nfunction createCoreContext(options = {}) {\n    // setup options\n    const onWarn = isFunction(options.onWarn) ? options.onWarn : warn;\n    const version = isString(options.version) ? options.version : VERSION;\n    const locale = isString(options.locale) || isFunction(options.locale)\n        ? options.locale\n        : DEFAULT_LOCALE;\n    const _locale = isFunction(locale) ? DEFAULT_LOCALE : locale;\n    const fallbackLocale = isArray(options.fallbackLocale) ||\n        isPlainObject(options.fallbackLocale) ||\n        isString(options.fallbackLocale) ||\n        options.fallbackLocale === false\n        ? options.fallbackLocale\n        : _locale;\n    const messages = isPlainObject(options.messages)\n        ? options.messages\n        : { [_locale]: {} };\n    const datetimeFormats = isPlainObject(options.datetimeFormats)\n            ? options.datetimeFormats\n            : { [_locale]: {} }\n        ;\n    const numberFormats = isPlainObject(options.numberFormats)\n            ? options.numberFormats\n            : { [_locale]: {} }\n        ;\n    const modifiers = assign({}, options.modifiers || {}, getDefaultLinkedModifiers());\n    const pluralRules = options.pluralRules || {};\n    const missing = isFunction(options.missing) ? options.missing : null;\n    const missingWarn = isBoolean(options.missingWarn) || isRegExp(options.missingWarn)\n        ? options.missingWarn\n        : true;\n    const fallbackWarn = isBoolean(options.fallbackWarn) || isRegExp(options.fallbackWarn)\n        ? options.fallbackWarn\n        : true;\n    const fallbackFormat = !!options.fallbackFormat;\n    const unresolving = !!options.unresolving;\n    const postTranslation = isFunction(options.postTranslation)\n        ? options.postTranslation\n        : null;\n    const processor = isPlainObject(options.processor) ? options.processor : null;\n    const warnHtmlMessage = isBoolean(options.warnHtmlMessage)\n        ? options.warnHtmlMessage\n        : true;\n    const escapeParameter = !!options.escapeParameter;\n    const messageCompiler = isFunction(options.messageCompiler)\n        ? options.messageCompiler\n        : _compiler;\n    if ((process.env.NODE_ENV !== 'production') &&\n        !false &&\n        !false &&\n        isFunction(options.messageCompiler)) {\n        warnOnce(getWarnMessage(CoreWarnCodes.EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER));\n    }\n    const messageResolver = isFunction(options.messageResolver)\n        ? options.messageResolver\n        : _resolver || resolveWithKeyValue;\n    const localeFallbacker = isFunction(options.localeFallbacker)\n        ? options.localeFallbacker\n        : _fallbacker || fallbackWithSimple;\n    const fallbackContext = isObject(options.fallbackContext)\n        ? options.fallbackContext\n        : undefined;\n    // setup internal options\n    const internalOptions = options;\n    const __datetimeFormatters = isObject(internalOptions.__datetimeFormatters)\n            ? internalOptions.__datetimeFormatters\n            : new Map()\n        ;\n    const __numberFormatters = isObject(internalOptions.__numberFormatters)\n            ? internalOptions.__numberFormatters\n            : new Map()\n        ;\n    const __meta = isObject(internalOptions.__meta) ? internalOptions.__meta : {};\n    _cid++;\n    const context = {\n        version,\n        cid: _cid,\n        locale,\n        fallbackLocale,\n        messages,\n        modifiers,\n        pluralRules,\n        missing,\n        missingWarn,\n        fallbackWarn,\n        fallbackFormat,\n        unresolving,\n        postTranslation,\n        processor,\n        warnHtmlMessage,\n        escapeParameter,\n        messageCompiler,\n        messageResolver,\n        localeFallbacker,\n        fallbackContext,\n        onWarn,\n        __meta\n    };\n    {\n        context.datetimeFormats = datetimeFormats;\n        context.numberFormats = numberFormats;\n        context.__datetimeFormatters = __datetimeFormatters;\n        context.__numberFormatters = __numberFormatters;\n    }\n    // for vue-devtools timeline event\n    if ((process.env.NODE_ENV !== 'production')) {\n        context.__v_emitter =\n            internalOptions.__v_emitter != null\n                ? internalOptions.__v_emitter\n                : undefined;\n    }\n    // NOTE: experimental !!\n    if ((process.env.NODE_ENV !== 'production') || __INTLIFY_PROD_DEVTOOLS__) {\n        initI18nDevTools(context, version, __meta);\n    }\n    return context;\n}\n/** @internal */\nfunction isTranslateFallbackWarn(fallback, key) {\n    return fallback instanceof RegExp ? fallback.test(key) : fallback;\n}\n/** @internal */\nfunction isTranslateMissingWarn(missing, key) {\n    return missing instanceof RegExp ? missing.test(key) : missing;\n}\n/** @internal */\nfunction handleMissing(context, key, locale, missingWarn, type) {\n    const { missing, onWarn } = context;\n    // for vue-devtools timeline event\n    if ((process.env.NODE_ENV !== 'production')) {\n        const emitter = context.__v_emitter;\n        if (emitter) {\n            emitter.emit(\"missing\" /* VueDevToolsTimelineEvents.MISSING */, {\n                locale,\n                key,\n                type,\n                groupId: `${type}:${key}`\n            });\n        }\n    }\n    if (missing !== null) {\n        const ret = missing(context, locale, key, type);\n        return isString(ret) ? ret : key;\n    }\n    else {\n        if ((process.env.NODE_ENV !== 'production') && isTranslateMissingWarn(missingWarn, key)) {\n            onWarn(getWarnMessage(CoreWarnCodes.NOT_FOUND_KEY, { key, locale }));\n        }\n        return key;\n    }\n}\n/** @internal */\nfunction updateFallbackLocale(ctx, locale, fallback) {\n    const context = ctx;\n    context.__localeChainCache = new Map();\n    ctx.localeFallbacker(ctx, fallback, locale);\n}\n/** @internal */\nfunction isAlmostSameLocale(locale, compareLocale) {\n    if (locale === compareLocale)\n        return false;\n    return locale.split('-')[0] === compareLocale.split('-')[0];\n}\n/** @internal */\nfunction isImplicitFallback(targetLocale, locales) {\n    const index = locales.indexOf(targetLocale);\n    if (index === -1) {\n        return false;\n    }\n    for (let i = index + 1; i < locales.length; i++) {\n        if (isAlmostSameLocale(targetLocale, locales[i])) {\n            return true;\n        }\n    }\n    return false;\n}\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\nfunction format(ast) {\n    const msg = (ctx) => formatParts(ctx, ast);\n    return msg;\n}\nfunction formatParts(ctx, ast) {\n    const body = ast.b || ast.body;\n    if ((body.t || body.type) === 1 /* NodeTypes.Plural */) {\n        const plural = body;\n        const cases = plural.c || plural.cases;\n        return ctx.plural(cases.reduce((messages, c) => [\n            ...messages,\n            formatMessageParts(ctx, c)\n        ], []));\n    }\n    else {\n        return formatMessageParts(ctx, body);\n    }\n}\nfunction formatMessageParts(ctx, node) {\n    const _static = node.s || node.static;\n    if (_static) {\n        return ctx.type === 'text'\n            ? _static\n            : ctx.normalize([_static]);\n    }\n    else {\n        const messages = (node.i || node.items).reduce((acm, c) => [...acm, formatMessagePart(ctx, c)], []);\n        return ctx.normalize(messages);\n    }\n}\nfunction formatMessagePart(ctx, node) {\n    const type = node.t || node.type;\n    switch (type) {\n        case 3 /* NodeTypes.Text */: {\n            const text = node;\n            return (text.v || text.value);\n        }\n        case 9 /* NodeTypes.Literal */: {\n            const literal = node;\n            return (literal.v || literal.value);\n        }\n        case 4 /* NodeTypes.Named */: {\n            const named = node;\n            return ctx.interpolate(ctx.named(named.k || named.key));\n        }\n        case 5 /* NodeTypes.List */: {\n            const list = node;\n            return ctx.interpolate(ctx.list(list.i != null ? list.i : list.index));\n        }\n        case 6 /* NodeTypes.Linked */: {\n            const linked = node;\n            const modifier = linked.m || linked.modifier;\n            return ctx.linked(formatMessagePart(ctx, linked.k || linked.key), modifier ? formatMessagePart(ctx, modifier) : undefined, ctx.type);\n        }\n        case 7 /* NodeTypes.LinkedKey */: {\n            const linkedKey = node;\n            return (linkedKey.v || linkedKey.value);\n        }\n        case 8 /* NodeTypes.LinkedModifier */: {\n            const linkedModifier = node;\n            return (linkedModifier.v || linkedModifier.value);\n        }\n        default:\n            throw new Error(`unhandled node type on format message part: ${type}`);\n    }\n}\n\nconst WARN_MESSAGE = `Detected HTML in '{source}' message. Recommend not using HTML messages to avoid XSS.`;\nfunction checkHtmlMessage(source, warnHtmlMessage) {\n    if (warnHtmlMessage && detectHtmlTag(source)) {\n        warn(format$1(WARN_MESSAGE, { source }));\n    }\n}\nconst defaultOnCacheKey = (message) => message;\nlet compileCache = Object.create(null);\nfunction onCompileWarn(_warn) {\n    if (_warn.code === CompileWarnCodes.USE_MODULO_SYNTAX) {\n        warn(`The use of named interpolation with modulo syntax is deprecated. ` +\n            `It will be removed in v10.\\n` +\n            `reference: https://vue-i18n.intlify.dev/guide/essentials/syntax#rails-i18n-format \\n` +\n            `(message compiler warning message: ${_warn.message})`);\n    }\n}\nfunction clearCompileCache() {\n    compileCache = Object.create(null);\n}\nconst isMessageAST = (val) => isObject(val) &&\n    (val.t === 0 || val.type === 0) &&\n    ('b' in val || 'body' in val);\nfunction baseCompile(message, options = {}) {\n    // error detecting on compile\n    let detectError = false;\n    const onError = options.onError || defaultOnError;\n    options.onError = (err) => {\n        detectError = true;\n        onError(err);\n    };\n    // compile with mesasge-compiler\n    return { ...baseCompile$1(message, options), detectError };\n}\n/* #__NO_SIDE_EFFECTS__ */\nconst compileToFunction = (message, context) => {\n    if (!isString(message)) {\n        throw createCoreError(CoreErrorCodes.NOT_SUPPORT_NON_STRING_MESSAGE);\n    }\n    // set onWarn\n    if ((process.env.NODE_ENV !== 'production')) {\n        context.onWarn = onCompileWarn;\n    }\n    {\n        // check HTML message\n        const warnHtmlMessage = isBoolean(context.warnHtmlMessage)\n            ? context.warnHtmlMessage\n            : true;\n        (process.env.NODE_ENV !== 'production') && checkHtmlMessage(message, warnHtmlMessage);\n        // check caches\n        const onCacheKey = context.onCacheKey || defaultOnCacheKey;\n        const cacheKey = onCacheKey(message);\n        const cached = compileCache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        // compile\n        const { code, detectError } = baseCompile(message, context);\n        // evaluate function\n        const msg = new Function(`return ${code}`)();\n        // if occurred compile error, don't cache\n        return !detectError\n            ? (compileCache[cacheKey] = msg)\n            : msg;\n    }\n};\nfunction compile(message, context) {\n    // set onWarn\n    if ((process.env.NODE_ENV !== 'production')) {\n        context.onWarn = onCompileWarn;\n    }\n    if (((__INTLIFY_JIT_COMPILATION__ && !__INTLIFY_DROP_MESSAGE_COMPILER__)) &&\n        isString(message)) {\n        // check HTML message\n        const warnHtmlMessage = isBoolean(context.warnHtmlMessage)\n            ? context.warnHtmlMessage\n            : true;\n        (process.env.NODE_ENV !== 'production') && checkHtmlMessage(message, warnHtmlMessage);\n        // check caches\n        const onCacheKey = context.onCacheKey || defaultOnCacheKey;\n        const cacheKey = onCacheKey(message);\n        const cached = compileCache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        // compile with JIT mode\n        const { ast, detectError } = baseCompile(message, {\n            ...context,\n            location: (process.env.NODE_ENV !== 'production'),\n            jit: true\n        });\n        // compose message function from AST\n        const msg = format(ast);\n        // if occurred compile error, don't cache\n        return !detectError\n            ? (compileCache[cacheKey] = msg)\n            : msg;\n    }\n    else {\n        if ((process.env.NODE_ENV !== 'production') && !isMessageAST(message)) {\n            warn(`the message that is resolve with key '${context.key}' is not supported for jit compilation`);\n            return (() => message);\n        }\n        // AST case (passed from bundler)\n        const cacheKey = message.cacheKey;\n        if (cacheKey) {\n            const cached = compileCache[cacheKey];\n            if (cached) {\n                return cached;\n            }\n            // compose message function from message (AST)\n            return (compileCache[cacheKey] =\n                format(message));\n        }\n        else {\n            return format(message);\n        }\n    }\n}\n\nconst NOOP_MESSAGE_FUNCTION = () => '';\nconst isMessageFunction = (val) => isFunction(val);\n// implementation of `translate` function\nfunction translate(context, ...args) {\n    const { fallbackFormat, postTranslation, unresolving, messageCompiler, fallbackLocale, messages } = context;\n    const [key, options] = parseTranslateArgs(...args);\n    const missingWarn = isBoolean(options.missingWarn)\n        ? options.missingWarn\n        : context.missingWarn;\n    const fallbackWarn = isBoolean(options.fallbackWarn)\n        ? options.fallbackWarn\n        : context.fallbackWarn;\n    const escapeParameter = isBoolean(options.escapeParameter)\n        ? options.escapeParameter\n        : context.escapeParameter;\n    const resolvedMessage = !!options.resolvedMessage;\n    // prettier-ignore\n    const defaultMsgOrKey = isString(options.default) || isBoolean(options.default) // default by function option\n        ? !isBoolean(options.default)\n            ? options.default\n            : (!messageCompiler ? () => key : key)\n        : fallbackFormat // default by `fallbackFormat` option\n            ? (!messageCompiler ? () => key : key)\n            : '';\n    const enableDefaultMsg = fallbackFormat || defaultMsgOrKey !== '';\n    const locale = getLocale(context, options);\n    // escape params\n    escapeParameter && escapeParams(options);\n    // resolve message format\n    // eslint-disable-next-line prefer-const\n    let [formatScope, targetLocale, message] = !resolvedMessage\n        ? resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn)\n        : [\n            key,\n            locale,\n            messages[locale] || {}\n        ];\n    // NOTE:\n    //  Fix to work around `ssrTransfrom` bug in Vite.\n    //  https://github.com/vitejs/vite/issues/4306\n    //  To get around this, use temporary variables.\n    //  https://github.com/nuxt/framework/issues/1461#issuecomment-954606243\n    let format = formatScope;\n    // if you use default message, set it as message format!\n    let cacheBaseKey = key;\n    if (!resolvedMessage &&\n        !(isString(format) ||\n            isMessageAST(format) ||\n            isMessageFunction(format))) {\n        if (enableDefaultMsg) {\n            format = defaultMsgOrKey;\n            cacheBaseKey = format;\n        }\n    }\n    // checking message format and target locale\n    if (!resolvedMessage &&\n        (!(isString(format) ||\n            isMessageAST(format) ||\n            isMessageFunction(format)) ||\n            !isString(targetLocale))) {\n        return unresolving ? NOT_REOSLVED : key;\n    }\n    // TODO: refactor\n    if ((process.env.NODE_ENV !== 'production') && isString(format) && context.messageCompiler == null) {\n        warn(`The message format compilation is not supported in this build. ` +\n            `Because message compiler isn't included. ` +\n            `You need to pre-compilation all message format. ` +\n            `So translate function return '${key}'.`);\n        return key;\n    }\n    // setup compile error detecting\n    let occurred = false;\n    const onError = () => {\n        occurred = true;\n    };\n    // compile message format\n    const msg = !isMessageFunction(format)\n        ? compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, onError)\n        : format;\n    // if occurred compile error, return the message format\n    if (occurred) {\n        return format;\n    }\n    // evaluate message with context\n    const ctxOptions = getMessageContextOptions(context, targetLocale, message, options);\n    const msgContext = createMessageContext(ctxOptions);\n    const messaged = evaluateMessage(context, msg, msgContext);\n    // if use post translation option, proceed it with handler\n    const ret = postTranslation\n        ? postTranslation(messaged, key)\n        : messaged;\n    // NOTE: experimental !!\n    if ((process.env.NODE_ENV !== 'production') || __INTLIFY_PROD_DEVTOOLS__) {\n        // prettier-ignore\n        const payloads = {\n            timestamp: Date.now(),\n            key: isString(key)\n                ? key\n                : isMessageFunction(format)\n                    ? format.key\n                    : '',\n            locale: targetLocale || (isMessageFunction(format)\n                ? format.locale\n                : ''),\n            format: isString(format)\n                ? format\n                : isMessageFunction(format)\n                    ? format.source\n                    : '',\n            message: ret\n        };\n        payloads.meta = assign({}, context.__meta, getAdditionalMeta() || {});\n        translateDevTools(payloads);\n    }\n    return ret;\n}\nfunction escapeParams(options) {\n    if (isArray(options.list)) {\n        options.list = options.list.map(item => isString(item) ? escapeHtml(item) : item);\n    }\n    else if (isObject(options.named)) {\n        Object.keys(options.named).forEach(key => {\n            if (isString(options.named[key])) {\n                options.named[key] = escapeHtml(options.named[key]);\n            }\n        });\n    }\n}\nfunction resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn) {\n    const { messages, onWarn, messageResolver: resolveValue, localeFallbacker } = context;\n    const locales = localeFallbacker(context, fallbackLocale, locale); // eslint-disable-line @typescript-eslint/no-explicit-any\n    let message = {};\n    let targetLocale;\n    let format = null;\n    let from = locale;\n    let to = null;\n    const type = 'translate';\n    for (let i = 0; i < locales.length; i++) {\n        targetLocale = to = locales[i];\n        if ((process.env.NODE_ENV !== 'production') &&\n            locale !== targetLocale &&\n            !isAlmostSameLocale(locale, targetLocale) &&\n            isTranslateFallbackWarn(fallbackWarn, key)) {\n            onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_TRANSLATE, {\n                key,\n                target: targetLocale\n            }));\n        }\n        // for vue-devtools timeline event\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\n            const emitter = context.__v_emitter;\n            if (emitter) {\n                emitter.emit(\"fallback\" /* VueDevToolsTimelineEvents.FALBACK */, {\n                    type,\n                    key,\n                    from,\n                    to,\n                    groupId: `${type}:${key}`\n                });\n            }\n        }\n        message =\n            messages[targetLocale] || {};\n        // for vue-devtools timeline event\n        let start = null;\n        let startTag;\n        let endTag;\n        if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n            start = window.performance.now();\n            startTag = 'intlify-message-resolve-start';\n            endTag = 'intlify-message-resolve-end';\n            mark && mark(startTag);\n        }\n        if ((format = resolveValue(message, key)) === null) {\n            // if null, resolve with object key path\n            format = message[key]; // eslint-disable-line @typescript-eslint/no-explicit-any\n        }\n        // for vue-devtools timeline event\n        if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n            const end = window.performance.now();\n            const emitter = context.__v_emitter;\n            if (emitter && start && format) {\n                emitter.emit(\"message-resolve\" /* VueDevToolsTimelineEvents.MESSAGE_RESOLVE */, {\n                    type: \"message-resolve\" /* VueDevToolsTimelineEvents.MESSAGE_RESOLVE */,\n                    key,\n                    message: format,\n                    time: end - start,\n                    groupId: `${type}:${key}`\n                });\n            }\n            if (startTag && endTag && mark && measure) {\n                mark(endTag);\n                measure('intlify message resolve', startTag, endTag);\n            }\n        }\n        if (isString(format) || isMessageAST(format) || isMessageFunction(format)) {\n            break;\n        }\n        if (!isImplicitFallback(targetLocale, locales)) {\n            const missingRet = handleMissing(context, // eslint-disable-line @typescript-eslint/no-explicit-any\n            key, targetLocale, missingWarn, type);\n            if (missingRet !== key) {\n                format = missingRet;\n            }\n        }\n        from = to;\n    }\n    return [format, targetLocale, message];\n}\nfunction compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, onError) {\n    const { messageCompiler, warnHtmlMessage } = context;\n    if (isMessageFunction(format)) {\n        const msg = format;\n        msg.locale = msg.locale || targetLocale;\n        msg.key = msg.key || key;\n        return msg;\n    }\n    if (messageCompiler == null) {\n        const msg = (() => format);\n        msg.locale = targetLocale;\n        msg.key = key;\n        return msg;\n    }\n    // for vue-devtools timeline event\n    let start = null;\n    let startTag;\n    let endTag;\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n        start = window.performance.now();\n        startTag = 'intlify-message-compilation-start';\n        endTag = 'intlify-message-compilation-end';\n        mark && mark(startTag);\n    }\n    const msg = messageCompiler(format, getCompileContext(context, targetLocale, cacheBaseKey, format, warnHtmlMessage, onError));\n    // for vue-devtools timeline event\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n        const end = window.performance.now();\n        const emitter = context.__v_emitter;\n        if (emitter && start) {\n            emitter.emit(\"message-compilation\" /* VueDevToolsTimelineEvents.MESSAGE_COMPILATION */, {\n                type: \"message-compilation\" /* VueDevToolsTimelineEvents.MESSAGE_COMPILATION */,\n                message: format,\n                time: end - start,\n                groupId: `${'translate'}:${key}`\n            });\n        }\n        if (startTag && endTag && mark && measure) {\n            mark(endTag);\n            measure('intlify message compilation', startTag, endTag);\n        }\n    }\n    msg.locale = targetLocale;\n    msg.key = key;\n    msg.source = format;\n    return msg;\n}\nfunction evaluateMessage(context, msg, msgCtx) {\n    // for vue-devtools timeline event\n    let start = null;\n    let startTag;\n    let endTag;\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n        start = window.performance.now();\n        startTag = 'intlify-message-evaluation-start';\n        endTag = 'intlify-message-evaluation-end';\n        mark && mark(startTag);\n    }\n    const messaged = msg(msgCtx);\n    // for vue-devtools timeline event\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n        const end = window.performance.now();\n        const emitter = context.__v_emitter;\n        if (emitter && start) {\n            emitter.emit(\"message-evaluation\" /* VueDevToolsTimelineEvents.MESSAGE_EVALUATION */, {\n                type: \"message-evaluation\" /* VueDevToolsTimelineEvents.MESSAGE_EVALUATION */,\n                value: messaged,\n                time: end - start,\n                groupId: `${'translate'}:${msg.key}`\n            });\n        }\n        if (startTag && endTag && mark && measure) {\n            mark(endTag);\n            measure('intlify message evaluation', startTag, endTag);\n        }\n    }\n    return messaged;\n}\n/** @internal */\nfunction parseTranslateArgs(...args) {\n    const [arg1, arg2, arg3] = args;\n    const options = {};\n    if (!isString(arg1) &&\n        !isNumber(arg1) &&\n        !isMessageFunction(arg1) &&\n        !isMessageAST(arg1)) {\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n    }\n    // prettier-ignore\n    const key = isNumber(arg1)\n        ? String(arg1)\n        : isMessageFunction(arg1)\n            ? arg1\n            : arg1;\n    if (isNumber(arg2)) {\n        options.plural = arg2;\n    }\n    else if (isString(arg2)) {\n        options.default = arg2;\n    }\n    else if (isPlainObject(arg2) && !isEmptyObject(arg2)) {\n        options.named = arg2;\n    }\n    else if (isArray(arg2)) {\n        options.list = arg2;\n    }\n    if (isNumber(arg3)) {\n        options.plural = arg3;\n    }\n    else if (isString(arg3)) {\n        options.default = arg3;\n    }\n    else if (isPlainObject(arg3)) {\n        assign(options, arg3);\n    }\n    return [key, options];\n}\nfunction getCompileContext(context, locale, key, source, warnHtmlMessage, onError) {\n    return {\n        locale,\n        key,\n        warnHtmlMessage,\n        onError: (err) => {\n            onError && onError(err);\n            if ((process.env.NODE_ENV !== 'production')) {\n                const _source = getSourceForCodeFrame(source);\n                const message = `Message compilation error: ${err.message}`;\n                const codeFrame = err.location &&\n                    _source &&\n                    generateCodeFrame(_source, err.location.start.offset, err.location.end.offset);\n                const emitter = context.__v_emitter;\n                if (emitter && _source) {\n                    emitter.emit(\"compile-error\" /* VueDevToolsTimelineEvents.COMPILE_ERROR */, {\n                        message: _source,\n                        error: err.message,\n                        start: err.location && err.location.start.offset,\n                        end: err.location && err.location.end.offset,\n                        groupId: `${'translate'}:${key}`\n                    });\n                }\n                console.error(codeFrame ? `${message}\\n${codeFrame}` : message);\n            }\n            else {\n                throw err;\n            }\n        },\n        onCacheKey: (source) => generateFormatCacheKey(locale, key, source)\n    };\n}\nfunction getSourceForCodeFrame(source) {\n    if (isString(source)) {\n        return source;\n    }\n    else {\n        if (source.loc && source.loc.source) {\n            return source.loc.source;\n        }\n    }\n}\nfunction getMessageContextOptions(context, locale, message, options) {\n    const { modifiers, pluralRules, messageResolver: resolveValue, fallbackLocale, fallbackWarn, missingWarn, fallbackContext } = context;\n    const resolveMessage = (key) => {\n        let val = resolveValue(message, key);\n        // fallback to root context\n        if (val == null && fallbackContext) {\n            const [, , message] = resolveMessageFormat(fallbackContext, key, locale, fallbackLocale, fallbackWarn, missingWarn);\n            val = resolveValue(message, key);\n        }\n        if (isString(val) || isMessageAST(val)) {\n            let occurred = false;\n            const onError = () => {\n                occurred = true;\n            };\n            const msg = compileMessageFormat(context, key, locale, val, key, onError);\n            return !occurred\n                ? msg\n                : NOOP_MESSAGE_FUNCTION;\n        }\n        else if (isMessageFunction(val)) {\n            return val;\n        }\n        else {\n            // TODO: should be implemented warning message\n            return NOOP_MESSAGE_FUNCTION;\n        }\n    };\n    const ctxOptions = {\n        locale,\n        modifiers,\n        pluralRules,\n        messages: resolveMessage\n    };\n    if (context.processor) {\n        ctxOptions.processor = context.processor;\n    }\n    if (options.list) {\n        ctxOptions.list = options.list;\n    }\n    if (options.named) {\n        ctxOptions.named = options.named;\n    }\n    if (isNumber(options.plural)) {\n        ctxOptions.pluralIndex = options.plural;\n    }\n    return ctxOptions;\n}\n\nconst intlDefined = typeof Intl !== 'undefined';\nconst Availabilities = {\n    dateTimeFormat: intlDefined && typeof Intl.DateTimeFormat !== 'undefined',\n    numberFormat: intlDefined && typeof Intl.NumberFormat !== 'undefined'\n};\n\n// implementation of `datetime` function\nfunction datetime(context, ...args) {\n    const { datetimeFormats, unresolving, fallbackLocale, onWarn, localeFallbacker } = context;\n    const { __datetimeFormatters } = context;\n    if ((process.env.NODE_ENV !== 'production') && !Availabilities.dateTimeFormat) {\n        onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_DATE));\n        return MISSING_RESOLVE_VALUE;\n    }\n    const [key, value, options, overrides] = parseDateTimeArgs(...args);\n    const missingWarn = isBoolean(options.missingWarn)\n        ? options.missingWarn\n        : context.missingWarn;\n    const fallbackWarn = isBoolean(options.fallbackWarn)\n        ? options.fallbackWarn\n        : context.fallbackWarn;\n    const part = !!options.part;\n    const locale = getLocale(context, options);\n    const locales = localeFallbacker(context, // eslint-disable-line @typescript-eslint/no-explicit-any\n    fallbackLocale, locale);\n    if (!isString(key) || key === '') {\n        return new Intl.DateTimeFormat(locale, overrides).format(value);\n    }\n    // resolve format\n    let datetimeFormat = {};\n    let targetLocale;\n    let format = null;\n    let from = locale;\n    let to = null;\n    const type = 'datetime format';\n    for (let i = 0; i < locales.length; i++) {\n        targetLocale = to = locales[i];\n        if ((process.env.NODE_ENV !== 'production') &&\n            locale !== targetLocale &&\n            isTranslateFallbackWarn(fallbackWarn, key)) {\n            onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_DATE_FORMAT, {\n                key,\n                target: targetLocale\n            }));\n        }\n        // for vue-devtools timeline event\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\n            const emitter = context.__v_emitter;\n            if (emitter) {\n                emitter.emit(\"fallback\" /* VueDevToolsTimelineEvents.FALBACK */, {\n                    type,\n                    key,\n                    from,\n                    to,\n                    groupId: `${type}:${key}`\n                });\n            }\n        }\n        datetimeFormat =\n            datetimeFormats[targetLocale] || {};\n        format = datetimeFormat[key];\n        if (isPlainObject(format))\n            break;\n        handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\n        from = to;\n    }\n    // checking format and target locale\n    if (!isPlainObject(format) || !isString(targetLocale)) {\n        return unresolving ? NOT_REOSLVED : key;\n    }\n    let id = `${targetLocale}__${key}`;\n    if (!isEmptyObject(overrides)) {\n        id = `${id}__${JSON.stringify(overrides)}`;\n    }\n    let formatter = __datetimeFormatters.get(id);\n    if (!formatter) {\n        formatter = new Intl.DateTimeFormat(targetLocale, assign({}, format, overrides));\n        __datetimeFormatters.set(id, formatter);\n    }\n    return !part ? formatter.format(value) : formatter.formatToParts(value);\n}\n/** @internal */\nconst DATETIME_FORMAT_OPTIONS_KEYS = [\n    'localeMatcher',\n    'weekday',\n    'era',\n    'year',\n    'month',\n    'day',\n    'hour',\n    'minute',\n    'second',\n    'timeZoneName',\n    'formatMatcher',\n    'hour12',\n    'timeZone',\n    'dateStyle',\n    'timeStyle',\n    'calendar',\n    'dayPeriod',\n    'numberingSystem',\n    'hourCycle',\n    'fractionalSecondDigits'\n];\n/** @internal */\nfunction parseDateTimeArgs(...args) {\n    const [arg1, arg2, arg3, arg4] = args;\n    const options = {};\n    let overrides = {};\n    let value;\n    if (isString(arg1)) {\n        // Only allow ISO strings - other date formats are often supported,\n        // but may cause different results in different browsers.\n        const matches = arg1.match(/(\\d{4}-\\d{2}-\\d{2})(T|\\s)?(.*)/);\n        if (!matches) {\n            throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\n        }\n        // Some browsers can not parse the iso datetime separated by space,\n        // this is a compromise solution by replace the 'T'/' ' with 'T'\n        const dateTime = matches[3]\n            ? matches[3].trim().startsWith('T')\n                ? `${matches[1].trim()}${matches[3].trim()}`\n                : `${matches[1].trim()}T${matches[3].trim()}`\n            : matches[1].trim();\n        value = new Date(dateTime);\n        try {\n            // This will fail if the date is not valid\n            value.toISOString();\n        }\n        catch (e) {\n            throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\n        }\n    }\n    else if (isDate(arg1)) {\n        if (isNaN(arg1.getTime())) {\n            throw createCoreError(CoreErrorCodes.INVALID_DATE_ARGUMENT);\n        }\n        value = arg1;\n    }\n    else if (isNumber(arg1)) {\n        value = arg1;\n    }\n    else {\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n    }\n    if (isString(arg2)) {\n        options.key = arg2;\n    }\n    else if (isPlainObject(arg2)) {\n        Object.keys(arg2).forEach(key => {\n            if (DATETIME_FORMAT_OPTIONS_KEYS.includes(key)) {\n                overrides[key] = arg2[key];\n            }\n            else {\n                options[key] = arg2[key];\n            }\n        });\n    }\n    if (isString(arg3)) {\n        options.locale = arg3;\n    }\n    else if (isPlainObject(arg3)) {\n        overrides = arg3;\n    }\n    if (isPlainObject(arg4)) {\n        overrides = arg4;\n    }\n    return [options.key || '', value, options, overrides];\n}\n/** @internal */\nfunction clearDateTimeFormat(ctx, locale, format) {\n    const context = ctx;\n    for (const key in format) {\n        const id = `${locale}__${key}`;\n        if (!context.__datetimeFormatters.has(id)) {\n            continue;\n        }\n        context.__datetimeFormatters.delete(id);\n    }\n}\n\n// implementation of `number` function\nfunction number(context, ...args) {\n    const { numberFormats, unresolving, fallbackLocale, onWarn, localeFallbacker } = context;\n    const { __numberFormatters } = context;\n    if ((process.env.NODE_ENV !== 'production') && !Availabilities.numberFormat) {\n        onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_NUMBER));\n        return MISSING_RESOLVE_VALUE;\n    }\n    const [key, value, options, overrides] = parseNumberArgs(...args);\n    const missingWarn = isBoolean(options.missingWarn)\n        ? options.missingWarn\n        : context.missingWarn;\n    const fallbackWarn = isBoolean(options.fallbackWarn)\n        ? options.fallbackWarn\n        : context.fallbackWarn;\n    const part = !!options.part;\n    const locale = getLocale(context, options);\n    const locales = localeFallbacker(context, // eslint-disable-line @typescript-eslint/no-explicit-any\n    fallbackLocale, locale);\n    if (!isString(key) || key === '') {\n        return new Intl.NumberFormat(locale, overrides).format(value);\n    }\n    // resolve format\n    let numberFormat = {};\n    let targetLocale;\n    let format = null;\n    let from = locale;\n    let to = null;\n    const type = 'number format';\n    for (let i = 0; i < locales.length; i++) {\n        targetLocale = to = locales[i];\n        if ((process.env.NODE_ENV !== 'production') &&\n            locale !== targetLocale &&\n            isTranslateFallbackWarn(fallbackWarn, key)) {\n            onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT, {\n                key,\n                target: targetLocale\n            }));\n        }\n        // for vue-devtools timeline event\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\n            const emitter = context.__v_emitter;\n            if (emitter) {\n                emitter.emit(\"fallback\" /* VueDevToolsTimelineEvents.FALBACK */, {\n                    type,\n                    key,\n                    from,\n                    to,\n                    groupId: `${type}:${key}`\n                });\n            }\n        }\n        numberFormat =\n            numberFormats[targetLocale] || {};\n        format = numberFormat[key];\n        if (isPlainObject(format))\n            break;\n        handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\n        from = to;\n    }\n    // checking format and target locale\n    if (!isPlainObject(format) || !isString(targetLocale)) {\n        return unresolving ? NOT_REOSLVED : key;\n    }\n    let id = `${targetLocale}__${key}`;\n    if (!isEmptyObject(overrides)) {\n        id = `${id}__${JSON.stringify(overrides)}`;\n    }\n    let formatter = __numberFormatters.get(id);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(targetLocale, assign({}, format, overrides));\n        __numberFormatters.set(id, formatter);\n    }\n    return !part ? formatter.format(value) : formatter.formatToParts(value);\n}\n/** @internal */\nconst NUMBER_FORMAT_OPTIONS_KEYS = [\n    'localeMatcher',\n    'style',\n    'currency',\n    'currencyDisplay',\n    'currencySign',\n    'useGrouping',\n    'minimumIntegerDigits',\n    'minimumFractionDigits',\n    'maximumFractionDigits',\n    'minimumSignificantDigits',\n    'maximumSignificantDigits',\n    'compactDisplay',\n    'notation',\n    'signDisplay',\n    'unit',\n    'unitDisplay',\n    'roundingMode',\n    'roundingPriority',\n    'roundingIncrement',\n    'trailingZeroDisplay'\n];\n/** @internal */\nfunction parseNumberArgs(...args) {\n    const [arg1, arg2, arg3, arg4] = args;\n    const options = {};\n    let overrides = {};\n    if (!isNumber(arg1)) {\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n    }\n    const value = arg1;\n    if (isString(arg2)) {\n        options.key = arg2;\n    }\n    else if (isPlainObject(arg2)) {\n        Object.keys(arg2).forEach(key => {\n            if (NUMBER_FORMAT_OPTIONS_KEYS.includes(key)) {\n                overrides[key] = arg2[key];\n            }\n            else {\n                options[key] = arg2[key];\n            }\n        });\n    }\n    if (isString(arg3)) {\n        options.locale = arg3;\n    }\n    else if (isPlainObject(arg3)) {\n        overrides = arg3;\n    }\n    if (isPlainObject(arg4)) {\n        overrides = arg4;\n    }\n    return [options.key || '', value, options, overrides];\n}\n/** @internal */\nfunction clearNumberFormat(ctx, locale, format) {\n    const context = ctx;\n    for (const key in format) {\n        const id = `${locale}__${key}`;\n        if (!context.__numberFormatters.has(id)) {\n            continue;\n        }\n        context.__numberFormatters.delete(id);\n    }\n}\n\n{\n    initFeatureFlags();\n}\n\nexport { CoreErrorCodes, CoreWarnCodes, DATETIME_FORMAT_OPTIONS_KEYS, DEFAULT_LOCALE, DEFAULT_MESSAGE_DATA_TYPE, MISSING_RESOLVE_VALUE, NOT_REOSLVED, NUMBER_FORMAT_OPTIONS_KEYS, VERSION, clearCompileCache, clearDateTimeFormat, clearNumberFormat, compile, compileToFunction, createCoreContext, createCoreError, createMessageContext, datetime, fallbackWithLocaleChain, fallbackWithSimple, getAdditionalMeta, getDevToolsHook, getFallbackContext, getLocale, getWarnMessage, handleMissing, initI18nDevTools, isAlmostSameLocale, isImplicitFallback, isMessageAST, isMessageFunction, isTranslateFallbackWarn, isTranslateMissingWarn, number, parse, parseDateTimeArgs, parseNumberArgs, parseTranslateArgs, registerLocaleFallbacker, registerMessageCompiler, registerMessageResolver, resolveLocale, resolveValue, resolveWithKeyValue, setAdditionalMeta, setDevToolsHook, setFallbackContext, translate, translateDevTools, updateFallbackLocale };\n"],"names":["inBrowser","makeSymbol","name","shareable","generateFormatCacheKey","locale","key","source","friendlyJSONstringify","json","isNumber","val","isDate","toTypeString","isRegExp","isEmptyObject","isPlainObject","assign","_globalThis","getGlobalThis","escapeHtml","rawText","hasOwnProperty","hasOwn","obj","isArray","isFunction","isString","isBoolean","isObject","isPromise","objectToString","value","proto","toDisplayString","join","items","separator","str","item","index","incrementer","code","current","warn","msg","err","isNotObjectOrIsArray","deepCopy","src","des","stack","createPosition","line","column","offset","createLocation","start","end","RE_ARGS","format","message","args","match","identifier","CompileWarnCodes","warnMessages","createCompileWarn","loc","CompileErrorCodes","errorMessages","createCompileError","options","domain","messages","error","defaultOnError","CHAR_SP","CHAR_CR","CHAR_LF","CHAR_LS","CHAR_PS","createScanner","_buf","_index","_line","_column","_peekOffset","isCRLF","isLF","isPS","isLS","isLineEnd","peekOffset","charAt","currentChar","currentPeek","next","peek","reset","resetPeek","skipToPeek","target","EOF","DOT","LITERAL_DELIMITER","ERROR_DOMAIN$3","createTokenizer","location","_scnr","currentOffset","currentPosition","_initLoc","_initOffset","_context","context","onError","emitError","pos","ctx","getToken","type","token","getEndToken","eat","scnr","ch","peekSpaces","buf","skipSpaces","isIdentifierStart","cc","isNumberStart","isNamedIdentifierStart","currentType","ret","isListIdentifierStart","isLiteralStart","isLinkedDotStart","isLinkedModifierStart","isLinkedDelimiterStart","isLinkedReferStart","fn","isTextStart","isPluralStart","detectModuloStart","spaces","hasSpace","prev","detectModulo","takeChar","isIdentifier","takeIdentifierChar","isNamedIdentifier","takeNamedIdentifierChar","isDigit","takeDigit","isHexDigit","takeHexDigit","getDigits","num","readModulo","readText","readNamedIdentifier","readListIdentifier","isLiteral","readLiteral","literal","readEscapeSequence","readUnicodeEscapeSequence","unicode","digits","sequence","i","isInvalidIdentifier","readInvalidIdentifier","identifiers","readLinkedModifier","readLinkedRefer","readPlural","plural","readTokenInPlaceholder","readTokenInLinked","validNamedIdentifier","validListIdentifier","validLiteral","readToken","isModulo","nextToken","startLoc","endLoc","ERROR_DOMAIN$2","KNOWN_ESCAPES","fromEscapeSequence","codePoint4","codePoint6","codePoint","createParser","onWarn","tokenzer","emitWarn","startNode","node","endNode","parseText","tokenizer","parseList","parseNamed","modulo","parseLiteral","parseLinkedModifier","getTokenCaption","parseLinkedKey","parseLinked","linkedNode","parsed","nextContext","emptyLinkedKeyNode","parseMessage","startOffset","endOffset","parsePlural","msgNode","hasEmptyMessage","parseResource","parse","createTransformer","ast","traverseNodes","nodes","transformer","traverseNode","transform","optimize","body","optimizeMessageNode","c","values","ERROR_DOMAIN$1","minify","resource","cases","valueNode","linked","list","named","ERROR_DOMAIN","createCodeGenerator","sourceMap","filename","breakLineCode","_needIndent","push","_newline","n","withBreakLine","_breakLineCode","indent","withNewLine","level","deindent","newline","generateLinkedNode","generator","helper","generateNode","generateMessageNode","needIndent","length","generatePluralNode","generateResource","generate","mode","helpers","s","map","baseCompile","assignedOptions","jit","enalbeMinify","enambeOptimize","initFeatureFlags","pathStateMachine","literalValueRE","exp","stripQuotes","a","b","getPathCharType","formatSubPath","path","trimmed","keys","subPathDepth","newChar","transition","action","typeMap","actions","maybeUnescapeQuote","nextChar","cache","resolveWithKeyValue","resolveValue","hit","len","last","DEFAULT_MODIFIER","DEFAULT_MESSAGE","DEFAULT_MESSAGE_DATA_TYPE","DEFAULT_NORMALIZE","DEFAULT_INTERPOLATE","pluralDefault","choice","choicesLength","getPluralIndex","normalizeNamed","pluralIndex","props","createMessageContext","pluralRule","orgPluralRule","_list","_named","_modifier","normalize","interpolate","arg1","arg2","modifier","devtools","setDevToolsHook","hook","initI18nDevTools","i18n","version","meta","translateDevTools","createDevToolsHook","payloads","code$1","inc$1","CoreWarnCodes","inc","CoreErrorCodes","createCoreError","getLocale","resolveLocale","_resolveLocale","resolve","fallbackWithSimple","fallback","fallbackWithLocaleChain","startLocale","DEFAULT_LOCALE","chain","block","appendBlockToChain","defaults","blocks","follow","appendLocaleToChain","tokens","appendItemToChain","VERSION","NOT_REOSLVED","MISSING_RESOLVE_VALUE","capitalize","getDefaultLinkedModifiers","_compiler","registerMessageCompiler","compiler","_resolver","registerMessageResolver","resolver","_fallbacker","registerLocaleFallbacker","fallbacker","_additionalMeta","setAdditionalMeta","getAdditionalMeta","_fallbackContext","setFallbackContext","getFallbackContext","_cid","createCoreContext","_locale","fallbackLocale","datetimeFormats","numberFormats","modifiers","pluralRules","missing","missingWarn","fallbackWarn","fallbackFormat","unresolving","postTranslation","processor","warnHtmlMessage","escapeParameter","messageCompiler","messageResolver","localeFallbacker","fallbackContext","internalOptions","__datetimeFormatters","__numberFormatters","__meta","handleMissing","updateFallbackLocale","isAlmostSameLocale","compareLocale","isImplicitFallback","targetLocale","locales","formatParts","formatMessageParts","_static","acm","formatMessagePart","text","linkedKey","linkedModifier","defaultOnCacheKey","compileCache","isMessageAST","detectError","baseCompile$1","compileToFunction","cacheKey","cached","compile","NOOP_MESSAGE_FUNCTION","isMessageFunction","translate","parseTranslateArgs","resolvedMessage","defaultMsgOrKey","enableDefaultMsg","escapeParams","formatScope","resolveMessageFormat","cacheBaseKey","occurred","compileMessageFormat","ctxOptions","getMessageContextOptions","msgContext","messaged","evaluateMessage","missingRet","getCompileContext","msgCtx","arg3","datetime","overrides","parseDateTimeArgs","part","datetimeFormat","id","formatter","DATETIME_FORMAT_OPTIONS_KEYS","arg4","matches","dateTime","clearDateTimeFormat","number","parseNumberArgs","numberFormat","NUMBER_FORMAT_OPTIONS_KEYS","clearNumberFormat"],"mappings":"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","x_google_ignoreList":[0,1,2]}